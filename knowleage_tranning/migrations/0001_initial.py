# Generated by Django 2.1.7 on 2020-10-27 14:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hrms_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ManageKnowledgeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_level', models.CharField(default='', max_length=200, unique=True, verbose_name='Knowledge Level')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('description', models.CharField(default='', max_length=200, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_knowledge_level',
            },
        ),
        migrations.CreateModel(
            name='ManageKnowledgeProductPromotions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details_of_promotion', models.CharField(default='', max_length=200, verbose_name='Details of Promotion')),
                ('applicable_to', models.CharField(default='', max_length=200, verbose_name='Applicable to')),
                ('purpose_of_promotion', models.CharField(default='', max_length=200, verbose_name='Purpose of promotion')),
                ('promotion_period', models.CharField(default='', max_length=200, verbose_name='Promotion Period')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'manage_knowledge_product_promotions',
            },
        ),
        migrations.CreateModel(
            name='ManageKnowledgeProductPromotionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Promotion Type')),
                ('details_of_promotion', models.CharField(default='', max_length=200, verbose_name='Details of Promotion')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_knowledge_product_promotion_type',
            },
        ),
        migrations.CreateModel(
            name='ManageKnowledgeProductTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('product', models.CharField(default='', max_length=200, verbose_name='Product')),
                ('nature_of_training', models.CharField(default='', max_length=200, verbose_name='Nature of Training')),
                ('training_name', models.CharField(default='', max_length=200, verbose_name='Training Name')),
                ('purpose_of_training', models.CharField(default='', max_length=200, verbose_name='Purpose of Training')),
                ('max_no_of_participant', models.CharField(default='', max_length=200, verbose_name='Max No of Participant')),
                ('faculty', models.CharField(default='', max_length=200, verbose_name='Faculty')),
                ('venue_of_training', models.CharField(default='', max_length=200, verbose_name='Venue of Training')),
                ('training_calander', models.DateField(blank=True, null=True, verbose_name='Training Calander')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'manage_knowledge_product_training',
            },
        ),
        migrations.CreateModel(
            name='ManageKnowledgeProductTrainingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_type', models.CharField(default='', max_length=200, verbose_name='Training Type')),
                ('product', models.CharField(default='', max_length=200, verbose_name='Product')),
                ('nature_of_training', models.CharField(default='', max_length=200, verbose_name='Nature of Training')),
                ('training_name', models.CharField(default='', max_length=200, verbose_name='Training Name')),
                ('purpose', models.CharField(default='', max_length=200, verbose_name='Purpose')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_knowledge_product_training_type',
            },
        ),
        migrations.CreateModel(
            name='ManageKnowledgeTraningWithType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_name', models.CharField(default='', max_length=200, verbose_name='Knowledge Name')),
                ('upload_documents', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='Upload Documents')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('knowledge_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowleage_tranning.ManageKnowledgeLevel', verbose_name='Knowledge Level')),
            ],
            options={
                'db_table': 'manage_knowledge_traning_with_type',
            },
        ),
        migrations.CreateModel(
            name='ManageKnowledgeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Knowledge Type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('description', models.CharField(default='', max_length=200, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_knowledge_type',
            },
        ),
        migrations.AddField(
            model_name='manageknowledgetraningwithtype',
            name='knowledge_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowleage_tranning.ManageKnowledgeType', verbose_name='Knowledge Type'),
        ),
        migrations.AddField(
            model_name='manageknowledgeproducttraining',
            name='training_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowleage_tranning.ManageKnowledgeProductTrainingType', verbose_name='Training Type'),
        ),
        migrations.AddField(
            model_name='manageknowledgeproducttraining',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='manageknowledgeproductpromotions',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowleage_tranning.ManageKnowledgeProductTrainingType', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='manageknowledgeproductpromotions',
            name='promotion_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowleage_tranning.ManageKnowledgeProductPromotionType', verbose_name='Promotion Type'),
        ),
        migrations.AddField(
            model_name='manageknowledgeproductpromotions',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
