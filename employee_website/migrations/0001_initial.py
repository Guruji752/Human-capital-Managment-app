# Generated by Django 2.1.7 on 2020-10-27 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hrms_management', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hrms_employees', '__first__'),
        ('knowleage_tranning', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='ABC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='name')),
            ],
            options={
                'db_table': 'abc_1',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAccessControls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('official_email_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Official Email Id')),
                ('official_contact_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Official Contact Number')),
                ('id_card_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='ID Card number')),
                ('system_access_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='System Access Id')),
                ('attendance_card_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Attendance Card Number')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_access_controls',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAdvancesSubmitAdvanceRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('today_date', models.DateField(blank=True, null=True, verbose_name='Approved Date')),
                ('action_status', models.CharField(blank=True, max_length=100, null=True)),
                ('action', models.BooleanField(default=0)),
                ('request_date', models.DateField(blank=True, null=True, verbose_name='Request Date')),
                ('month_and_year', models.DateField(blank=True, null=True, verbose_name='Month/Year')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('advance_amount_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Recovery Amount')),
                ('recovery_start_from_1', models.DateField(blank=True, null=True, verbose_name='Recovery Start Date')),
                ('recovery_end_from_1', models.DateField(blank=True, null=True, verbose_name='Recovery End Date')),
                ('interest_rate', models.IntegerField(blank=True, null=True, verbose_name='Interest Charged')),
                ('recovery_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Period')),
                ('justification_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Purpose')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Processed', 'Processed ')], default='Pending', max_length=200, null=True, verbose_name='Approval Status')),
                ('advance_approved_1', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=200, null=True, verbose_name='Advance Approved')),
                ('payment_status', models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=200, null=True, verbose_name='Payment Status ')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('advance_type_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagePayRollDefineAdvances', verbose_name='Advance Type')),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_advance_approved_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_advances_submit_advance_request',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAdvancesSubmitIncentiveBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('today_date', models.DateField(blank=True, null=True)),
                ('action_status', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('action', models.BooleanField(default=0)),
                ('maximum_limit', models.IntegerField(blank=True, null=True, verbose_name='Maximum Limit')),
                ('period', models.DateField(blank=True, null=True, verbose_name='Period')),
                ('date', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Month/Year')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('incentive_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Type')),
                ('incentive_period', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Period')),
                ('incentive_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Amount')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Processed', 'Processed ')], default='Pending', max_length=200, null=True, verbose_name='Approval Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_incentive_approved_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_advances_submit_incentive_bonus',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAssetAllocated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_code_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Asset Code')),
                ('asset_serial_number_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Asset Serial Number')),
                ('asset_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Asset Name')),
                ('asset_condition_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Asset Condition')),
                ('asset_location_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Asset Location')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_asset_allocated',
            },
        ),
        migrations.CreateModel(
            name='EmployeeClaimandReimbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_action', models.BooleanField(default=0)),
                ('claim_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('employee_names_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employee Name ')),
                ('start_date_1', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date_1', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('approved_date', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('claim_date_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Month/Year')),
                ('claim_period_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Period')),
                ('claim_details_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Details')),
                ('claim_amount_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Amount')),
                ('claim_restriced_to_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Limit')),
                ('comment_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Comment')),
                ('approved_amount_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount Approved')),
                ('upload_1', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('date_of_processing_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Date')),
                ('claim_upload_document', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='claim_approved', to=settings.AUTH_USER_MODEL)),
                ('claim_type_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageClaimType', verbose_name='Claim Type')),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeClaimandReimbursementSubmitClaims',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('today_date', models.DateField(blank=True, null=True)),
                ('claim_action', models.BooleanField(default=0)),
                ('claim_status', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('ticket_expenses_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ticket Expenses')),
                ('food_expenses_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Food Expenses')),
                ('stay_expenses_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Stay Expenses')),
                ('other_expenses_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Other Expenses')),
                ('total_expenses_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Total Expenses')),
                ('no_days_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='No of days')),
                ('advance_taken_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Advance Taken')),
                ('balance_claim_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Balance Claim')),
                ('purpose_of_travel_1', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Purpose of Travel')),
                ('mode_of_travel_1', models.CharField(blank=True, choices=[('Air', 'Air'), ('Road', 'Road'), ('Train', 'Train'), ('Own Arrangement', 'Own Arrangement')], default='', max_length=100, null=True, verbose_name='Mode of Travel')),
                ('employee_names_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employee Name ')),
                ('start_date_1', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date_1', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('stay_arrangement_1', models.CharField(blank=True, choices=[('Own Arrangement', 'Own Arrangement'), ('Company Arrangement', 'Company Arrangement')], default='', max_length=100, null=True, verbose_name='Stay arrangement')),
                ('claim_date_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Month/Year')),
                ('claim_period_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Period')),
                ('claim_details_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Details')),
                ('claim_amount_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Amount')),
                ('claim_restriced_to_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Claim Limit')),
                ('comment_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Comment')),
                ('approved_amount_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount Approved')),
                ('upload_1', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('date_of_processing_1', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='', max_length=200, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('claim_upload_document', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='claim_approved_by', to=settings.AUTH_USER_MODEL)),
                ('claim_type_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageClaimType', verbose_name='Claim Type')),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_claimand_reimbursement_submit_claims',
            },
        ),
        migrations.CreateModel(
            name='EmployeeClaimandReimbursementSubmitClaimsUpdateStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_amount', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount Approved')),
                ('submit_claim', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeClaimandReimbursementSubmitClaims')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_claimand_reimbursement_submit_claims_update_status',
            },
        ),
        migrations.CreateModel(
            name='EmployeeClaimandReimbursementSubmitReimbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employee Name ')),
                ('reimbursement_month_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('reimbursement_period_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Reimbursement Period')),
                ('amount_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount')),
                ('maximum_limit_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Maximum Limit')),
                ('comment_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Comment')),
                ('upload_1', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=200, null=True, verbose_name='Status')),
                ('approved_amount_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount Approved')),
                ('approved_amount', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount Approved')),
                ('date_of_processing', models.DateTimeField(blank=True, null=True, verbose_name='Date of Processing')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reimbursement_approved_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
            ],
            options={
                'db_table': 'employee_claimand_reimbursement_submit_reimbursement',
            },
        ),
        migrations.CreateModel(
            name='EmployeeClaimandReimbursementSubmitReimbursementUpdateStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_amount', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount Approved')),
                ('submit_claim', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeClaimandReimbursementSubmitReimbursement')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_claimand_reimbursement_submit_reimbursement_update_status',
            },
        ),
        migrations.CreateModel(
            name='EmployeeExitEmployeeResignation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exit_recommended', models.BooleanField(default=0)),
                ('exit_reject', models.BooleanField(default=0)),
                ('approve', models.BooleanField(default=0)),
                ('current_status', models.CharField(blank=True, default='pending', max_length=100, null=True, verbose_name='Current Status')),
                ('upload_FandF', models.FileField(blank=True, null=True, upload_to='upload_report/%Y/%m/%d/', verbose_name='Upload F&F statement')),
                ('upload_resignation', models.FileField(blank=True, null=True, upload_to='upload_report/%Y/%m/%d/', verbose_name='Upload Resignation Letter')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('resignation_date', models.DateField(blank=True, null=True, verbose_name='Resignation Date')),
                ('last_date', models.DateField(blank=True, null=True, verbose_name='Last Date')),
                ('reasons_for_resignation', models.CharField(blank=True, max_length=500, null=True, verbose_name='Reasons for Resignation')),
                ('notice_period_applicability', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=1, null=True, verbose_name='Notice Period')),
                ('notice_period_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Notice Period Required')),
                ('notice_period_waived', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name=' Notice Period Waived')),
                ('notice_period_to_be_served', models.IntegerField(blank=True, default=0, null=True, verbose_name='Notice Period to be Served(In days)')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Full and Final Settlement'), (4, 'Rejected'), (5, 'Release')], default=1, null=True, verbose_name='Status')),
                ('notice_pay_deducted', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Notice Pay Deducted')),
                ('status_of_assets_allocated', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprocess'), (3, 'Complete')], default=1, null=True, verbose_name='Status of Assets Allocated')),
                ('status_of_responsibility_handover', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprocess'), (3, 'Complete')], default=1, null=True, verbose_name='Status of Responsibility Handover')),
                ('status_of_formalities_completed_status_of_exit_interview', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprocess'), (3, 'Complete')], default=1, null=True, verbose_name='Status of Formalities completed  Status of Exit Interview')),
                ('status_of_relieving_letters_status_of_full_and_final_settlement', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprocess'), (3, 'Complete')], default=1, null=True, verbose_name='Status of Relieving Letters  Status of Full and Final Settlement')),
                ('final_salary_status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprocess'), (3, 'Complete')], default=1, null=True, verbose_name='Final Salary Status')),
                ('final_sal_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Setter', 'Setter')], default='', max_length=200, null=True, verbose_name='Final Salary Status')),
                ('net_salary', models.CharField(blank=True, max_length=200, null=True, verbose_name='Impact on Salary')),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_exit_employee_resignation',
            },
        ),
        migrations.CreateModel(
            name='EmployeeHrPoliciesUpdateCirculars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circular_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Circular Type')),
                ('upload', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('effect_date', models.DateTimeField(blank=True, null=True, verbose_name='Effect Date')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_hr_policies_update_circulars_model',
            },
        ),
        migrations.CreateModel(
            name='EmployeeHRPoliciesUpdateForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('effect_date', models.DateTimeField(blank=True, null=True, verbose_name='Effect Date')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('form_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.PoliciesandFormsManagementHRPolicies', verbose_name='Form Type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_hr_policies_update_form_model',
            },
        ),
        migrations.CreateModel(
            name='EmployeeHRPoliciesUpdatePolicies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload', models.FileField(upload_to='upload_hr_policies/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('effect_date', models.DateTimeField(blank=True, null=True, verbose_name='Effect Date(Format:2019-08-05)')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('policy_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.HRPoliciesPolicyType', verbose_name='Policy Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_hr_policies_update_policies_model',
            },
        ),
        migrations.CreateModel(
            name='EmployeeIncomeTaxCalculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Employee Name')),
                ('assessment_year', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Assessment Year')),
                ('annual_salary', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Annual Salary')),
                ('other_income', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Other Income')),
                ('total_income', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Total Income')),
                ('exemption', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Exemption')),
                ('deduction', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Deduction')),
                ('taxable_income', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Taxable Income')),
                ('income_tax', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Income Tax')),
                ('professional_tax', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Professional Tax')),
                ('entertainment_tax', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Entertainment Tax')),
                ('total', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Total')),
                ('cess', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Cess')),
                ('total_tax_liabilty', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Total Tax Liability')),
                ('tax_already_deducted', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Tax Already deducted')),
                ('deduction_for_the_month', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Deductoin for the month')),
                ('balance_tax', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Balance Tax')),
                ('tax_approve_action', models.BooleanField(default=0)),
                ('tax_approve_status', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('recovery_period', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Recovery Period')),
                ('recovery_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Recovery Type')),
                ('recovery_amount', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Recovery Amount')),
                ('recovery_approval_action', models.BooleanField(default=0)),
                ('recovery_approval_status', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'employee_income_tax_calculation',
            },
        ),
        migrations.CreateModel(
            name='EmployeeLeavesLeaveRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_days', models.IntegerField(blank=True, default=0, null=True, verbose_name='Number of leaves')),
                ('employee_names', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employee Name')),
                ('leave_available', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Leave Available')),
                ('start_date', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Start Date')),
                ('end_date', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='End Date')),
                ('total_leave', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Total Leave')),
                ('explaination', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Explaination')),
                ('status', models.BooleanField(default=0)),
                ('leave_status', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Put on hold', 'Put on hold')], default='', max_length=100, null=True, verbose_name='Leave Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_leaves_leave_request',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('days_in_month', models.IntegerField(blank=True, choices=[(25, 25), (24, 24), (23, 23), (22, 22)], default='', null=True, verbose_name='Days In Month')),
                ('monthly_off', models.IntegerField(blank=True, choices=[(8, 8), (6, 6), (5, 5), (4, 4)], default='', null=True, verbose_name='Month Off')),
                ('working_days', models.IntegerField(blank=True, choices=[(24, 24), (23, 23), (22, 22), (21, 21)], default='', null=True, verbose_name='Working Days')),
                ('holidays', models.CharField(blank=True, max_length=200, null=True, verbose_name='Holidays')),
                ('leave_without_pay', models.CharField(blank=True, max_length=200, null=True, verbose_name='Leave withOut Pay')),
                ('pan_card_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Pan Card')),
                ('hra_allowances', models.CharField(blank=True, max_length=200, null=True, verbose_name='HRA Allowances')),
                ('conveyance', models.CharField(blank=True, max_length=200, null=True, verbose_name='Conveyance')),
                ('Incentive_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Gross Salary')),
                ('basic_pay', models.CharField(blank=True, max_length=200, null=True, verbose_name='Basic Pay')),
                ('hra_allowances_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='HRA Allowances')),
                ('conveyance_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Conveyance')),
                ('Reimbursement', models.CharField(blank=True, max_length=200, null=True, verbose_name='Conveyance')),
                ('incentive_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Salary Earned')),
                ('total', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Gross Salary')),
                ('performance_bonus', models.CharField(blank=True, max_length=200, null=True, verbose_name='Performance Bonus Salary Earned')),
                ('total_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Salary Earned')),
                ('pf', models.CharField(blank=True, max_length=200, null=True, verbose_name='PF Deduction Details')),
                ('esic', models.CharField(blank=True, max_length=200, null=True, verbose_name='ESIC Deduction Details')),
                ('absent', models.CharField(blank=True, max_length=200, null=True, verbose_name='Absent Deduction Details')),
                ('income', models.CharField(blank=True, max_length=200, null=True, verbose_name='Income Deduction Details')),
                ('tax', models.CharField(blank=True, max_length=200, null=True, verbose_name='TAX Deduction Details')),
                ('loan_recovery', models.CharField(blank=True, max_length=200, null=True, verbose_name='Loan Recovery Deduction Details')),
                ('total_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Deduction Details')),
                ('net_salary_payable', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Salary Earned')),
                ('bank_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bank Name')),
                ('ifsc_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='IFSC Code')),
                ('account_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account Number')),
                ('amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Amount')),
                ('mode_of_payment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Mode of Payment')),
                ('date_of_payment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Date of Payment')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=200, null=True, verbose_name='Status')),
                ('date_of_processing', models.DateTimeField(blank=True, verbose_name='Date of Processing')),
                ('upload', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='Template Upload')),
                ('upload_1', models.FileField(upload_to='upload_report/%Y/%m/%d/', verbose_name='Upload')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('claim_amount_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeClaimandReimbursementSubmitClaims', verbose_name='Conveyance')),
                ('claim_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageClaimType', verbose_name='Claim ')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_payroll_processed',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessingTaxCalculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departments', models.CharField(blank=True, max_length=200, null=True, verbose_name='Department')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('assessment_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Departments')),
                ('year_to_date_salary', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tax Declaration Type')),
                ('annual_salary', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tax Rule')),
                ('other_income', models.CharField(blank=True, max_length=200, null=True, verbose_name='Exemption Claimed')),
                ('total_income', models.CharField(blank=True, max_length=200, null=True, verbose_name='Exemption Approved')),
                ('exemption', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('deduction', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('taxable_income', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('tax', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('cess', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('total_tax_payable', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('tax_deducted', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('tax_paid', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('balance_tax_payable', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_payroll_processing_tax_calculation',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessingUpdateAdvances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('department', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('month_and_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('advance_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('recovery_period', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('advance_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('interest_rate', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('total_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('recovery_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('recovery_start_date', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_payroll_processing_update_advances',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessingUpdateIncentives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('department', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('month_and_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('incentive_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('incentive_period', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('incentive_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reimbursement Month')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_payroll_processing_update_incentive',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessingUpdateRecoveries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('departments', models.CharField(blank=True, max_length=200, null=True, verbose_name='Department')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('month_and_year', models.CharField(blank=True, max_length=200, null=True)),
                ('recovery_period', models.CharField(blank=True, max_length=200, null=True)),
                ('recovery_type', models.CharField(blank=True, max_length=200, null=True)),
                ('recovery_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Exemption Claimed')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
            ],
            options={
                'db_table': 'employee_payroll_processing_update_recoveries',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessingUpdateTaxDeclaration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('assessment_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Assessment Year')),
                ('tax_declaration_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tax Declaration Type')),
                ('tax_rule', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tax Rule')),
                ('exemption_claimed', models.CharField(blank=True, max_length=200, null=True, verbose_name='Exemption Claimed')),
                ('exemption_approved', models.CharField(blank=True, max_length=200, null=True, verbose_name='Exemption Approved')),
                ('maximum_limit', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, verbose_name='Status')),
                ('status1', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=200, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('submission_date', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Submission Date')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'employee_payroll_processing_tax_declaration',
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollProcessingUpdateTaxRecovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('departments', models.CharField(blank=True, max_length=200, null=True, verbose_name='Departments')),
                ('assessment_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Assessment Year')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('year_to_date_salary', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tax Recovery Type')),
                ('annual_salary', models.CharField(blank=True, max_length=200, null=True, verbose_name='Annual Salary')),
                ('total_tax_payable', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Tax Payable')),
                ('tax_already_recovered', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tax already Recovered')),
                ('recovery_during_current_month', models.CharField(blank=True, max_length=200, null=True, verbose_name='Recovery During Current Month')),
                ('total_tax_recovered', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Tax Recovered')),
                ('balance_tax_payable', models.CharField(blank=True, max_length=200, null=True, verbose_name='Balance Tax Payable')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=200, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
            ],
            options={
                'db_table': 'employee_payroll_processing_tax_recovery',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegisterationUpdateRegistrationEmergencyContactdetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('contact_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('email', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email Id')),
                ('relationship', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Relationship')),
            ],
            options={
                'db_table': 'employee_registration_emergency_details',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationCorrespondenceAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landmark', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Land Mark')),
                ('building', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='House Number')),
                ('block', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Block')),
                ('sector', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Sector')),
                ('district', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='District')),
                ('zip_code', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Pin Code')),
                ('staying_since', models.DateField(blank=True, null=True, verbose_name='Staying since')),
                ('ownership', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Ownership')),
                ('ownership_1', models.CharField(blank=True, choices=[('Self on', 'Self on'), ('Rented', 'Rented'), ('Family On', 'Self On')], default='', max_length=200, null=True, verbose_name='Ownership')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.City', verbose_name='City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.Country', verbose_name='Country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.State', verbose_name='State')),
            ],
            options={
                'db_table': 'employee_registration_correspondance',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationDeduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicated', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Applicated')),
                ('deduction_code', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction Code')),
                ('deduction_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction Name')),
                ('deduction_frequancy', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Frequancy')),
                ('deduction_ammount', models.IntegerField(blank=True, default=0, null=True, verbose_name='Deduction Ammount')),
                ('deduction_taxability_status_1', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=200, null=True, verbose_name='Tax Impact')),
                ('part_of_ctc_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Part of CTC')),
            ],
            options={
                'db_table': 'employee_registration_deduction',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationDeductionAndPerquisites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appicablitity_1', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=1, null=True, verbose_name='Applicablitity')),
                ('perquisitec_category_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Perquisite Code')),
                ('perquisitec_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Perquisite Name')),
                ('perquisite_frequency_1', models.IntegerField(blank=True, choices=[(1, 'Monthly'), (2, 'Yearly')], default=1, null=True, verbose_name='Perquisite Frequency')),
                ('percentage_value_flag_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Part of CTC')),
                ('perquisite_amount_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Amount offered')),
                ('perquisite_taxability_status_1', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=200, null=True, verbose_name='Taxability')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_deduction_and_perquisites',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Document Type')),
                ('name_of_documents_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name of Documents')),
                ('upload_1', models.FileField(upload_to='upload_report/%Y/%m/%d/', verbose_name='Upload')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_update_registration_documents',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationPermanentAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landmark_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Land Mark')),
                ('building_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='House Number')),
                ('block_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Block')),
                ('sector_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Sector')),
                ('district_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='District')),
                ('zip_code_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Pin Code')),
                ('staying_since_1', models.DateField(blank=True, null=True, verbose_name='Staying since')),
                ('ownership_1', models.CharField(blank=True, choices=[('Self on', 'Self on'), ('Rented', 'Rented'), ('Family On', 'Self On')], default='', max_length=200, null=True, verbose_name='Ownership')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('city_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.City', verbose_name='City')),
                ('country_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.Country', verbose_name='Country')),
                ('state_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.State', verbose_name='State')),
            ],
            options={
                'db_table': 'employee_registration_parmanent_address',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationReferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referencename_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('referencerelationship_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Relationship')),
                ('referencecontact_number_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('referenceemail_id_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email id')),
                ('referenceaddress_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Address')),
                ('referenceknown_since_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Known since')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_update_registration_references',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateBankDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Account Type')),
                ('bank_account_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Bank Account Number')),
                ('bank_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Bank Name')),
                ('branch', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Branch')),
                ('ifscc_code', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='IFSC Code')),
                ('micr', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='MICR ')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_update_registration_bank_details',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employee Name')),
                ('current_designation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Designation')),
                ('current_department', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Department')),
                ('current_reporting_to', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Reporting To')),
                ('current_responsibilites', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Responsibilites')),
                ('current_location', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Location')),
                ('new_location', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Location')),
                ('current_salary', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Salary')),
                ('new_salary', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Salary')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_update_department',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateEducationalQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('educational_qualificationcourse_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Course/Class')),
                ('educational_qualificationstart_date_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Acedemic Year ')),
                ('educational_qualificationend_date_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='End Date')),
                ('educational_qualificationmarks_division_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Marks')),
                ('educational_qualificationroll_number_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Roll Number')),
                ('educational_qualificationuniversity_institution_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='University/Board')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_update_educational_qualification',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateProfessionalJourney',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional_journeycompany_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employeer Name')),
                ('professional_journeystart_date_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Period')),
                ('professional_journeyend_date_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='End Date')),
                ('professional_journeynature_of_duties_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Main Responsibilites')),
                ('professional_journeylast_drawn_dalary_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Last Drawn Salary')),
                ('reason_for_leaving_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Reason for Leaving')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('professional_journeylast_desgination_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Last Designation')),
            ],
            options={
                'db_table': 'employee_registration_update_professional_journey',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationFamilityChildren',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Relationship')),
                ('name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('date_of_birth_1', models.CharField(blank=True, default='', max_length=200, verbose_name='Date Of Birth')),
                ('occupation_1', models.CharField(blank=True, default='', max_length=200, verbose_name='Occuption')),
                ('contact_number_1', models.CharField(blank=True, default='', max_length=200, verbose_name='Contact Number')),
                ('children_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('children_dob_1', models.DateField(blank=True, null=True, verbose_name='DOB')),
                ('children_occupation_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Occupation')),
                ('children_contact_number_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_family_children',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationFamilityDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mother_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('mother_dob', models.DateField(blank=True, null=True, verbose_name='DOB')),
                ('mother_occupation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Occupation')),
                ('mother_contact_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('father_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('father_dob', models.DateField(blank=True, null=True, verbose_name='DOB')),
                ('father_occupation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Occupation')),
                ('father_contact_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('spouse_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('spouse_dob', models.DateField(blank=True, null=True, verbose_name='DOB')),
                ('spouse_occupation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Occupation')),
                ('spouse_contact_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_family_details',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationFamiliyOtherDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('other_dob_1', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('other_occupation_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Occupation')),
                ('other_relationship_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Relationship')),
                ('other_contact_number_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_family_other_details',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationJoiningDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joining_date_of_joining', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Date of Joining')),
                ('joining_time', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Joining Time')),
                ('joining_grade_offered', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Grade offered')),
                ('joining_next_date_of_increment', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Next Date of Increment')),
                ('joining_probation_period', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Probation Period')),
                ('contract_valid_up_to', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contract Valid Up To')),
                ('mode_of_sourcing_1', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Sourcing')),
                ('effective_date', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Effective Date')),
                ('status', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='status')),
                ('income_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Income Type')),
                ('gross_total_income', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Gross Total Income')),
                ('deduction', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Deduction')),
                ('net_taxable_income', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Net Taxable Income')),
                ('upload_document', models.FileField(blank=True, null=True, upload_to='documents/%Y/%m/%d/', verbose_name='Upload Documents')),
                ('tax_declaration_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Tax Declaration Type')),
                ('exemption_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Exemption Type')),
                ('tax_rule', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Tax Rule')),
                ('exemption_amount', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Exemption Amount')),
                ('maxmimum_limit', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Maximum Limit')),
                ('upload_document_1', models.FileField(blank=True, null=True, upload_to='documents/%Y/%m/%d/', verbose_name='Upload Documents')),
                ('submission_date', models.DateField(blank=True, null=True, verbose_name='Submission date')),
                ('tax_declaration_status', models.BooleanField(default=0)),
                ('approve_date', models.DateField(blank=True, null=True, verbose_name='Approve Date')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('joining_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('joining_designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('joining_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('joining_reporting_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Reporting To')),
                ('joining_responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
                ('joining_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.RoleMangement', verbose_name='Role')),
                ('pay_roll_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeePayrollofJob', verbose_name='Payroll of')),
                ('type_of_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageUpdateEmploymentType', verbose_name='Type of Job')),
            ],
            options={
                'db_table': 'employee_registration_update_registration_joining_detail',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationJoiningDetailsHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_designation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Designation')),
                ('current_department', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Department')),
                ('current_reporting', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Reporting To')),
                ('current_responsibilites', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Responsibilit')),
                ('current_location', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Location')),
                ('current_role', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Role')),
                ('current_salary', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Current Salary')),
                ('new_salary', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Salary')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('joining_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.RoleMangement', verbose_name='New Role')),
                ('new_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='New Department')),
                ('new_designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='New Designation')),
                ('new_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='New Location')),
                ('new_reporting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='New Reporting To')),
                ('new_responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='New Responsibility')),
            ],
            options={
                'db_table': 'employee_registration_update_joining_details_history',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationMedicalHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('blood_group_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Blood Group')),
                ('type_of_illness_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Type of Illness')),
                ('result_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Result')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'employee_registration_medical_history',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateRegistrationPersonalDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Id')),
                ('mode_of_sourcing', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Mode of Sourcing')),
                ('mode_of_sourcing_1', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Sourcing')),
                ('photo', models.FileField(blank=True, null=True, upload_to='upload_report/%Y/%m/%d/', verbose_name='Photo')),
                ('name_salute', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name Salute')),
                ('name_salute_1', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Miss', 'Miss'), ('Ms', 'Ms'), ('Dr', 'Dr'), ('CA', 'CA'), ('Er.', 'Er.'), ('Prof', 'Prof')], default='', max_length=200, null=True, verbose_name='Salute')),
                ('first_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employee Name')),
                ('middle_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('caste', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Caste')),
                ('religion', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Religion ')),
                ('marital_status', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Marital Status')),
                ('marital_status_1', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Separated', 'Separated')], default='', max_length=200, null=True, verbose_name='Marital Status')),
                ('mobile_no', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Mobile Number')),
                ('email', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email Id')),
                ('landline_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Landline Number')),
                ('emergency_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Emergency Number')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('relationship', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Language Known')),
                ('pan_card', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Pan Card')),
                ('adhar_card', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Adhar Card')),
                ('driving_license', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Driving License')),
                ('language_known', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Language Known')),
                ('date_of_anniversary', models.DateField(blank=True, null=True, verbose_name='Date of Anniversary')),
                ('passport_no', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Passport Number')),
                ('voter_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Voter ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('employee_created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_created_by', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageLanguage', verbose_name='Language')),
                ('pay_roll_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeePayrollofJob', verbose_name='Payroll of')),
                ('type_of_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeeTypeofJob', verbose_name='Type of Job')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_registration_update_registration_personal_details',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationUpdateSalaryStructutre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_structut_salary_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Salary Name')),
                ('salary_structut_salary_frequency_1', models.IntegerField(blank=True, choices=[(1, 'Monthly'), (2, 'Yearly')], default=1, null=True, verbose_name='Frequency')),
                ('salary_structut_amount_offered_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount offered')),
                ('salary_structut_percentage_value_flag_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Percentage/ Value Flag')),
                ('salary_structut_taxability_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Taxability')),
                ('salary_structut_taxability_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=200, null=True, verbose_name='Taxability')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('salary_structut_salary_code_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageSalary', verbose_name='Salary Code')),
                ('user_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id')),
            ],
            options={
                'db_table': 'employee_registration_update_salary_structutre',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRegistrationVerificationReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_agency_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Verification Name')),
                ('finding_1', models.CharField(blank=True, choices=[('Accept', 'Accept'), ('Rejected', 'Rejected')], default='', max_length=200, null=True, verbose_name='Status')),
                ('upload_report_1', models.FileField(upload_to='upload_report/%Y/%m/%d/', verbose_name='Report')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('user_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id')),
            ],
            options={
                'db_table': 'employee_registration_update_verification_report',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementCreateRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('existing_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Existing Strength')),
                ('new_requirement', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Requirement')),
                ('total_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Total Strength')),
                ('time_frame_1', models.CharField(blank=True, choices=[('With in 15 days', 'With in 15 days'), ('With in 30 days', 'With in 30 days'), ('With in 3 month', 'With in 3 month'), ('With in 6 month', 'With in 6 month')], default='With in 15 days', max_length=200, null=True, verbose_name='Time Frame')),
                ('job_description', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Job Description')),
                ('valid_upto', models.DateField(blank=True, null=True, verbose_name='Position Valid upto')),
                ('mode_of_publishing', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('position_available', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Available')),
                ('position_publish', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Published')),
                ('place_of_job_posting', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Place of Job Posting')),
                ('response_mode', models.CharField(blank=True, choices=[('Online', 'Online'), ('Offline', 'Offline')], default='', max_length=200, null=True, verbose_name='Response Mode')),
                ('vacancy_approved', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Vacancies Approved')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=600, null=True, verbose_name='Comment')),
                ('job_link', models.CharField(blank=True, max_length=600, null=True, verbose_name='Name')),
                ('status', models.CharField(blank=True, choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Expired', 'Expired'), ('Withdraw', 'Withdraw')], default='Open', max_length=60, null=True, verbose_name='STATUS')),
                ('action_required', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Recommended', 'Recommended'), ('Reviewed', 'Reviewed'), ('Approved', 'Approved'), ('Put on hold', 'Put on hold'), ('Rejected', 'Rejected')], default='pending', max_length=200, null=True, verbose_name='Action Required')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='', max_length=200, null=True, verbose_name='Gender')),
                ('is_active', models.BooleanField(default=1)),
                ('is_filled', models.BooleanField(default=0)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageExpereince', verbose_name='Experience')),
                ('language', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageLanguage', verbose_name='Language')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('pay_roll_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeePayrollofJob', verbose_name='Payroll of')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageQualification', verbose_name='Qualification')),
                ('start_salary', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageSalaryRange', verbose_name='salary Range')),
                ('type_of_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageUpdateEmploymentType', verbose_name='Type of Job')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_services_recruitement_create_requirement_model',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementDocumentUploads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Document Type')),
                ('document_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Document Name')),
                ('required_by_1', models.DateField(blank=True, null=True, verbose_name='Required by')),
                ('verification_template_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Verification Template')),
                ('type_of_verification_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Type Of Verification')),
                ('document_status', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'employee_services_recruitement_document_upload',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementHrReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('existing_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Existing Strength')),
                ('new_requirement', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Requirement')),
                ('total_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Total Strength')),
                ('recommendation', models.CharField(blank=True, choices=[('Recommended', 'Recommended'), ('Rejected', 'Rejected'), ('Put on Hold', 'Put on Hold')], default='', max_length=200, null=True, verbose_name='Recommendation')),
                ('time_frame_1', models.CharField(blank=True, choices=[('With in 15 days', 'With in 15 days'), ('With in 30 days', 'With in 30 days'), ('With in 3 month', 'With in 3 month'), ('With in 6 month', 'With in 6 month')], default='With in 15 days', max_length=200, null=True, verbose_name='Time Frame')),
                ('job_description', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Job Description')),
                ('valid_upto', models.DateField(blank=True, null=True, verbose_name='Position Valid upto')),
                ('mode_of_publishing', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('position_available', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Available')),
                ('position_publish', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Published')),
                ('place_of_job_posting', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Place of Job Posting')),
                ('response_mode', models.CharField(blank=True, choices=[('Online', 'Online'), ('Offline', 'Offline')], default='', max_length=200, null=True, verbose_name='Response Mode')),
                ('vacancy_approved', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Vacancies Approved')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=600, null=True, verbose_name='Comment')),
                ('job_link', models.CharField(blank=True, max_length=600, null=True, verbose_name='Name')),
                ('status', models.CharField(blank=True, choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Expired', 'Expired'), ('Withdraw', 'Withdraw')], default='Open', max_length=60, null=True, verbose_name='STATUS')),
                ('action_required', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Recommended', 'Recommended'), ('Reviewed', 'Reviewed'), ('Approved', 'Approved'), ('Put on hold', 'Put on hold'), ('Rejected', 'Rejected')], default='pending', max_length=200, null=True, verbose_name='Action Required')),
                ('added', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='', max_length=200, null=True, verbose_name='Gender')),
                ('is_active', models.BooleanField(default=1)),
                ('is_recommended', models.BooleanField(default=0)),
                ('hr_recommended', models.CharField(blank=True, default='pending', max_length=200, null=True, verbose_name='Hr_recommended')),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageExpereince', verbose_name='Experience')),
                ('language', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageLanguage', verbose_name='Language')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('pay_roll_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeePayrollofJob', verbose_name='Payroll of')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageQualification', verbose_name='Qualification')),
                ('start_salary', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageSalaryRange', verbose_name='Salary Range')),
                ('type_of_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageUpdateEmploymentType', verbose_name='Type of Job')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_services_recruitement_hr_review_requirement',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementInviteResume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_no', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Phone Number')),
                ('email_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email Id')),
                ('profile_summary', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Profile Summary')),
                ('resume_received_doc', models.FileField(blank=True, null=True, upload_to='candidates_resume/%Y/%m/%d/', verbose_name='Resume')),
                ('mode_of_publishing', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('interview_result_1', models.CharField(blank=True, choices=[(' Qualified ', ' Qualified '), (' Rejected ', ' Rejected '), (' Hold ', ' Hold ')], default='', max_length=200, null=True, verbose_name='Interview Result')),
                ('interview_date', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Interview Date')),
                ('interview_time', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Interview Time')),
                ('overall_rating', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Overall Rating')),
                ('formalities_completed_on', models.DateField(blank=True, null=True, verbose_name='Formalities Completed on')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Resume Received'), (2, 'Resume Shortlisted'), (3, 'Candidates Shortlisted'), (4, 'Candidates Joined'), (5, 'Rejected')], default=1, null=True, verbose_name='Decision')),
                ('interview_status', models.IntegerField(blank=True, choices=[(1, 'Accept'), (2, 'Rejected'), (3, 'Hold'), (4, 'Delete')], default=0, null=True, verbose_name='Resume Status')),
                ('resume_status', models.CharField(blank=True, choices=[('Accept', 'Accept'), ('Rejected', 'Rejected'), ('Hold', 'Hold'), ('Delete', 'Delete')], default='', max_length=200, null=True, verbose_name='Resume Status')),
                ('interview_committee', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Interview Committee')),
                ('details_of_interview', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Details of Interview')),
                ('recommendation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Recommendation')),
                ('recommendation_1', models.CharField(blank=True, choices=[('Interview Held', 'Interview Held'), ('Postpone', 'Postpone'), ('Hold', 'Hold'), ('Cancelled', 'Cancelled')], default='', max_length=200, null=True, verbose_name='Recommendation')),
                ('salary_offered', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Salary offered')),
                ('offer_date', models.DateField(blank=True, null=True, verbose_name='Offer Date')),
                ('document_submission', models.FileField(blank=True, null=True, upload_to='candidates_upload_document/%Y/%m/%d/', verbose_name='Document')),
                ('date_joining_candition', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Date Joining Condition')),
                ('date_of_joining', models.DateField(blank=True, null=True, verbose_name='Date of Joining')),
                ('offer_letter_date', models.DateField(blank=True, null=True, verbose_name='Offer Letter  Date')),
                ('offer_letter_status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprogress'), (3, 'Completed')], default=0, null=True, verbose_name='Interview Status')),
                ('interview_details_status', models.CharField(blank=True, choices=[('Place of Interview', 'Place of Interview'), ('Timing of Interview', 'Timing of Interview'), ('Date of Interview', 'Date of Interview'), ('Contact Person', 'Contact Person')], default='', max_length=200, null=True, verbose_name='Interview Status')),
                ('interview_of_status', models.CharField(blank=True, choices=[('Attended', 'Attended'), ('Rescheduled', 'Rescheduled'), ('Absent', 'Absent')], default='Attended', max_length=200, null=True, verbose_name='Interview Status')),
                ('place_of_interview', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name=' Place Of Interview')),
                ('timing_of_interview', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name=' Timing Of Interview')),
                ('date_of_interview', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Date Of Interview ')),
                ('contact_person', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person ')),
                ('comment', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='Comment ')),
                ('document_name', models.CharField(blank=True, choices=[('10th Certificate ', '10th Certificate '), (' Graduation Certificate ', ' Graduation Certificate'), ('Post Graduation Certificate', 'Post Graduation Certificate'), ('Experience Certificate ', 'Experience Certificate'), ('Relieving Letter ', ' Relieving Letter'), ('Pan Card ', 'Pan Card '), ('Aadhar Card ', 'Aadhar Card'), (' Photo', 'Photo '), (' Bank Statement', 'Bank Statement '), (' Salary Slip', 'Salary Slip ')], default='', max_length=200, null=True, verbose_name=' Document Required')),
                ('interview_held', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='Interview Held ')),
                ('cancelled', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='Cancelled ')),
                ('proposed', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='Proposed ')),
                ('new_date', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='New Date ')),
                ('new_time', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='New Time ')),
                ('new_place_of_interview', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='New Place ')),
                ('new_contact_person', models.CharField(blank=True, default='', max_length=800, null=True, verbose_name='New Contact Person ')),
                ('candidate_shortlist_status', models.CharField(blank=True, choices=[('Offer Issues', 'Offer Issues'), ('Expired', 'Expired'), ('Withdraw', 'Withdraw'), ('Join', 'Join')], default='', max_length=200, null=True, verbose_name=' Status')),
                ('interview_scheduled', models.CharField(blank=True, choices=[(' Interview Scheduled', 'Interview Scheduled ')], default='Interview Scheduled', max_length=200, null=True, verbose_name=' Interview Scheduled')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('updated_resume', models.BooleanField(default=0)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation offered')),
                ('job_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeServicesRecruitementCreateRequirement', verbose_name='Received from')),
                ('joining_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='joining_location', to='hrms_management.ManageBranch', verbose_name='Joining Location')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'employee_services_recruitement_invite_resume',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementPsychometricTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_candidate', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name of Candidate')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Resume Received'), (2, 'Resume Shortlisted'), (3, 'Candidates Shortlisted'), (4, 'Candidates Joined'), (5, 'Rejected')], default=1, null=True, verbose_name='Mode of Publishing')),
                ('email', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email Id')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'employee_services_recruitement_psychometrictest',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementPublishJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('existing_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Existing Strength')),
                ('new_requirement', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Requirement')),
                ('total_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Total Strength')),
                ('recommendation', models.CharField(blank=True, choices=[('Recommended', 'Recommended'), ('Rejected', 'Rejected'), ('Put on Hold', 'Put on Hold')], default='', max_length=200, null=True, verbose_name='Recommendation')),
                ('time_frame_1', models.CharField(blank=True, choices=[('With in 15 days', 'With in 15 days'), ('With in 30 days', 'With in 30 days'), ('With in 3 month', 'With in 3 month'), ('With in 6 month', 'With in 6 month')], default='With in 15 days', max_length=200, null=True, verbose_name='Time Frame')),
                ('job_description', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Job Description')),
                ('valid_upto', models.DateField(blank=True, null=True, verbose_name='Valid upto')),
                ('position_available', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Available')),
                ('position_publish', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Published')),
                ('response_mode', models.CharField(blank=True, choices=[('Online', 'Online'), ('Offline', 'Offline')], default='', max_length=200, null=True, verbose_name='Response Mode')),
                ('vacancy_approved', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Vacancies Available')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=600, null=True, verbose_name='Comment')),
                ('job_link', models.CharField(blank=True, max_length=600, null=True, verbose_name='Name')),
                ('status', models.CharField(blank=True, choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Expired', 'Expired'), ('Withdraw', 'Withdraw')], default='Open', max_length=60, null=True, verbose_name='STATUS')),
                ('action_required', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Recommended', 'Recommended'), ('Reviewed', 'Reviewed'), ('Approved', 'Approved'), ('Put on hold', 'Put on hold'), ('Rejected', 'Rejected')], default='pending', max_length=200, null=True, verbose_name='Action Required')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='', max_length=200, null=True, verbose_name='Gender')),
                ('is_active', models.BooleanField(default=1)),
                ('is_recommended', models.BooleanField(default=0)),
                ('hr_recommended', models.CharField(blank=True, default='pending', max_length=200, null=True, verbose_name='Hr_recommended')),
                ('is_approve', models.CharField(blank=True, default='pending', max_length=200, null=True, verbose_name='is_approved')),
                ('mode_of_publishing', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('vacancy_posted', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Vacancy Posted')),
                ('mode_of_response', models.CharField(blank=True, choices=[('online', 'online'), ('offline', 'offline'), ('both', 'both')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageExpereince', verbose_name='Experience')),
                ('language', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageLanguage', verbose_name='Language')),
                ('location', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('pay_roll_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeePayrollofJob', verbose_name='Payroll of')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageQualification', verbose_name='Qualification')),
                ('start_salary', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageSalaryRange', verbose_name='Salary Range')),
                ('type_of_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageUpdateEmploymentType', verbose_name='Type of Job')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_services_recruitement_publish_jobs',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementRecommended',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webiste_action', models.BooleanField(blank=True, null=True)),
                ('webiste_status', models.CharField(blank=True, max_length=100, null=True)),
                ('mode_of_response_job_portal', models.CharField(blank=True, choices=[('online', 'online'), ('offline', 'offline'), ('both', 'both')], max_length=100, null=True, verbose_name='Mode of Response')),
                ('portal_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Postal Name')),
                ('jon_portal_action', models.BooleanField(default=0)),
                ('url_job_portal', models.CharField(blank=True, max_length=100, null=True, verbose_name='Job Portal')),
                ('valid_upto_job_portal', models.CharField(blank=True, max_length=100, null=True, verbose_name='Valid Upto')),
                ('job_portal_status', models.CharField(blank=True, max_length=100, null=True)),
                ('job_portal_action', models.BooleanField(default=0)),
                ('mode_of_response_consultant', models.CharField(blank=True, choices=[('online', 'online'), ('offline', 'offline'), ('both', 'both')], max_length=100, null=True, verbose_name='Mode of Response')),
                ('valid_upto_consultant', models.CharField(blank=True, max_length=100, null=True, verbose_name='Valid Upto')),
                ('internal_source_action', models.CharField(blank=True, max_length=100, null=True)),
                ('internal_source_status', models.BooleanField(default=0)),
                ('consultant_source_status', models.CharField(blank=True, max_length=100, null=True)),
                ('consultant_source_action', models.BooleanField(default=0)),
                ('approval_status', models.BooleanField(default=0)),
                ('approval_action', models.CharField(blank=True, choices=[('Approve', 'Approve'), ('Reject', 'Reject'), ('Put on Hold', 'Put on Hold'), ('Refered back', 'Refered back')], max_length=100, null=True)),
                ('hr_status', models.BooleanField(default=0)),
                ('hr_action', models.CharField(blank=True, choices=[('Recommended', 'Recommended'), ('Rejected', 'Rejected'), ('Put on Hold', 'Put on Hold')], default='pending', max_length=100, null=True, verbose_name='Action')),
                ('tinme_frame', models.DateField(blank=True, null=True, verbose_name='Tentative closing date')),
                ('caste', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Caste')),
                ('religion', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Religion ')),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Separated', 'Separated')], default='', max_length=200, null=True, verbose_name='Marital Status')),
                ('middle_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Last Name')),
                ('name_salute', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Miss', 'Miss'), ('Ms', 'Ms'), ('Dr', 'Dr'), ('CA', 'CA'), ('Er.', 'Er.'), ('Prof', 'Prof')], default='', max_length=200, null=True, verbose_name='Salute')),
                ('landline_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Landline Number')),
                ('emergency_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Emergency Number')),
                ('relationship', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Language Known')),
                ('pan_card', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Pan Card')),
                ('adhar_card', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Adhar Card')),
                ('passport_no', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Passport Number')),
                ('voter_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Voter Id')),
                ('driving_license', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Driving License')),
                ('date_of_anniversary', models.DateField(blank=True, null=True, verbose_name='Date of Anniversary')),
                ('employee_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Id')),
                ('mode_of_sourcing', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Sourcing')),
                ('photo', models.FileField(blank=True, null=True, upload_to='upload_report/%Y/%m/%d/', verbose_name='Photo')),
                ('first_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='First Name')),
                ('publish_job_comment', models.TextField(blank=True, max_length=600, null=True, verbose_name='Comment')),
                ('approve_comment', models.TextField(blank=True, max_length=600, null=True, verbose_name='Comment')),
                ('document_receivied', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('shortlist_resume_status', models.BooleanField(default=0)),
                ('is_publish', models.BooleanField(default=0)),
                ('approve_status', models.BooleanField(default=0)),
                ('offer_formalities_status', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Rejected', 'Recommended')], default='', max_length=200, null=True)),
                ('created_user', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('is_hrrecommend', models.BooleanField(default=0)),
                ('existing_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Existing Strength')),
                ('new_requirement', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='New Requirement')),
                ('total_strength', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Total Strength')),
                ('recommendation', models.CharField(blank=True, choices=[('Recommended', 'Recommended'), ('Rejected', 'Rejected'), ('Put on Hold', 'Put on Hold')], default='pending', max_length=200, null=True, verbose_name='Recommendation')),
                ('time_frame_1', models.CharField(blank=True, choices=[('With in 15 days', 'With in 15 days'), ('With in 30 days', 'With in 30 days'), ('With in 3 month', 'With in 3 month'), ('With in 6 month', 'With in 6 month')], default='With in 15 days', max_length=200, null=True, verbose_name='Time Frame')),
                ('job_description', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Job Description')),
                ('valid_upto', models.DateField(blank=True, null=True, verbose_name='Valid upto')),
                ('position_available', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Available')),
                ('position_publish', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Position Published')),
                ('response_mode', models.CharField(blank=True, choices=[('Online', 'Online'), ('Offline', 'Offline')], default='', max_length=200, null=True, verbose_name='Response Mode')),
                ('vacancy_approved', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Vacancies Available')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('comment', models.TextField(blank=True, max_length=600, null=True, verbose_name='Comment')),
                ('job_link', models.CharField(blank=True, max_length=600, null=True, verbose_name='Name')),
                ('status', models.CharField(blank=True, choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Expired', 'Expired'), ('Withdraw', 'Withdraw')], default='Open', max_length=60, null=True, verbose_name='STATUS')),
                ('action_required', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Recommended', 'Recommended'), ('Reviewed', 'Reviewed'), ('Approved', 'Approved'), ('Put on hold', 'Put on hold'), ('Rejected', 'Rejected')], default='pending', max_length=200, null=True, verbose_name='Action Required')),
                ('publish_status', models.CharField(blank=True, default='pending', max_length=200, null=True, verbose_name='publish status')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='', max_length=200, null=True, verbose_name='Gender')),
                ('is_active', models.BooleanField(default=1)),
                ('is_recommended', models.BooleanField(default=0)),
                ('hr_recommended', models.CharField(blank=True, choices=[('Recommended', 'Recommended'), ('Rejected', 'Rejected'), ('Put on Hold', 'Put on Hold')], default='pending', max_length=200, null=True, verbose_name='Hr_recommended')),
                ('is_approve', models.CharField(blank=True, choices=[('Approve', 'Approve'), ('Rejected', 'Rejected'), ('Put on Hold', 'Put on Hold')], default='pending', max_length=200, null=True, verbose_name='is_approve')),
                ('mode_of_publishing', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('On Website', 'On Website'), ('Social Media', 'Social Media'), ('Local News Paper', 'Local News Paper'), ('E News', 'E News'), ('Job Portals', 'Job Portals')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('vacancy_posted', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Vacancy Posted')),
                ('is_filled', models.BooleanField(default=0)),
                ('resume_received_doc', models.FileField(blank=True, null=True, upload_to='candidates_resume/%Y/%m/%d/', verbose_name='Resume')),
                ('name_of_candidate', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name of Candidate')),
                ('phone_no', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Phone Number')),
                ('email_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email Id')),
                ('mode_of_response', models.CharField(blank=True, choices=[('online', 'online'), ('offline', 'offline'), ('both', 'both')], default='', max_length=200, null=True, verbose_name='Mode of Publishment')),
                ('updated_resume', models.BooleanField(default=0)),
                ('shortlist_resume', models.CharField(blank=True, choices=[('Approve', 'Approve'), ('Rejected', 'Rejected'), ('Blacklist', 'Blacklist')], default='pending', max_length=200, null=True, verbose_name='Shortlist Resume')),
                ('allow_psyco', models.CharField(blank=True, choices=[('Allow', 'Allow'), ('Waive', 'Waive')], default='pending', max_length=200, null=True, verbose_name='Allow Psyco')),
                ('psyco_test', models.BooleanField(default=0)),
                ('test_date', models.DateField(blank=True, null=True, verbose_name='Test Date')),
                ('test_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Test Type')),
                ('test_score_awarded', models.CharField(blank=True, default='', max_length=200, verbose_name='Test Score Awarded')),
                ('test_analysis', models.CharField(blank=True, default='', max_length=200, verbose_name='Test Analysis')),
                ('update_test', models.BooleanField(default=0)),
                ('place_of_interview', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name=' Place Of Interview')),
                ('timing_of_interview', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name=' Timing Of Interview')),
                ('date_interview', models.DateField(blank=True, null=True, verbose_name='Date Of Interview')),
                ('contact_person', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person ')),
                ('mode_of_interview', models.CharField(blank=True, choices=[('Personal Meeting', 'Personal Meeting'), ('Telephonic', 'Telephonic'), ('Video Conferencing', 'Video Conferencing')], default='', max_length=200, null=True, verbose_name='Mode Of Interview')),
                ('special_instruction', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Special Instruction')),
                ('schedule_status', models.BooleanField(default=0)),
                ('person_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person Name')),
                ('person_emailid', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person Email')),
                ('person_phoneno', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Phone No')),
                ('interview_score', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Interview Score')),
                ('individual_score', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Individual Score')),
                ('reasone_for_rescheduling', models.CharField(blank=True, default='', max_length=200, verbose_name='Reason For Rescheduling')),
                ('interview_of_status', models.CharField(blank=True, choices=[('Attended', 'Attended'), ('Rescheduled', 'Rescheduled'), ('Absent', 'Absent')], default='pending', max_length=200, null=True, verbose_name='Status of Interview')),
                ('interview_result_status', models.CharField(blank=True, default='pending', max_length=200, verbose_name='Interview Result')),
                ('interview_approvel', models.BooleanField(default=0)),
                ('document_type_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Document Type')),
                ('document_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Document Name')),
                ('type_of_verification_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Type of Verification')),
                ('verification_template_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Verification Template')),
                ('required_by_1', models.DateField(blank=True, null=True, verbose_name='Required by')),
                ('document_status', models.BooleanField(default=0)),
                ('document_submission', models.FileField(blank=True, null=True, upload_to='candidates_upload_document/%Y/%m/%d/', verbose_name='Document')),
                ('upload_document_status', models.BooleanField(default=0)),
                ('referencename_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('referencerelationship_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Relationship')),
                ('referencecontact_number_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Number')),
                ('referenceemail_id_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email id')),
                ('referenceaddress_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Address')),
                ('referenceknown_since_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Known since')),
                ('employer_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Employer Name')),
                ('employercontact_person', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person')),
                ('employer_emailid', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Email Id')),
                ('employeer_phno', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Address')),
                ('type_of_address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Type of Address')),
                ('staying_since', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Staying Since')),
                ('proof_attach', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Proof Attached')),
                ('test_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Test Name')),
                ('referred_to_hospital', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Reffered to Hospital')),
                ('occupation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Occupation')),
                ('offer_formalities_action', models.BooleanField(default=0)),
                ('grade', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Grade')),
                ('offer_contact_person', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person')),
                ('date_of_joining', models.DateField(blank=True, null=True, verbose_name='Date of Joining')),
                ('gross_salary', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Gross Salary')),
                ('salary_structut_salary_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Salary Name')),
                ('salary_structut_amount_offered_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount offered')),
                ('salary_structut_taxability_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Taxability')),
                ('salary_structut_salary_frequency_1', models.IntegerField(blank=True, default=1, null=True, verbose_name='Frequency')),
                ('perquisitec_name_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Perquisite Name')),
                ('perquisite_frequency_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Frequency')),
                ('perquisite_amount_1', models.IntegerField(blank=True, default=0, null=True, verbose_name='Amount')),
                ('deduction_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('deduction_frequancy', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Frequancy')),
                ('deduction_ammount', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Ammount')),
                ('perquisite_taxability', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Taxability')),
                ('perquisite_CTC', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Part of CTC')),
                ('deduction_CTC', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Part of CTC')),
                ('deduction_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction Type')),
                ('perquisite_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Perquisite Type')),
                ('issue_offer_action', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('issue_offer_status', models.BooleanField(default=0)),
                ('offer_approval', models.BooleanField(default=0)),
                ('acceptance_status', models.CharField(blank=True, default='Pending for Acceptance', max_length=200, null=True, verbose_name='Acceptance Status')),
                ('offer_current_status', models.CharField(blank=True, default='Pending for joining', max_length=200, null=True, verbose_name='Offer Current Status')),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageExpereince', verbose_name='Experience')),
                ('grade_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.ManageGrade', verbose_name='Grade')),
                ('language', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageLanguage', verbose_name='Language')),
                ('location', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('pay_roll_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagementEmployeePayrollofJob', verbose_name='Payroll of')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageQualification', verbose_name='Qualification')),
                ('salary_structut_salary_code_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageSalary', verbose_name='Salary Code')),
                ('start_salary', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageSalaryRange', verbose_name='Salary Range')),
                ('type_of_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageUpdateEmploymentType', verbose_name='Type of Job')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee_services_recruitement_recommended',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementUpdateConsultants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('contact_person_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('constitution', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Constitution')),
                ('correspondance_address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name=' Address')),
                ('building', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Building')),
                ('block', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Block')),
                ('sector', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Sector')),
                ('district', models.CharField(default='', max_length=200, verbose_name='District')),
                ('zip_code', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Pin code')),
                ('cin_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='CIN Number')),
                ('date_of_incorporation', models.DateField(blank=True, null=True, verbose_name='Incorporation Date ')),
                ('pan_card', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Pan Card')),
                ('tan_no', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='TAN Number')),
                ('gst_registration', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='GST Registration')),
                ('contact_person', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Contact Person')),
                ('designations', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Designation')),
                ('mobile_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Mobile Number')),
                ('mail_id', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Mail id')),
                ('services_offered', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Services Offered')),
                ('branches', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Branches')),
                ('experience', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Experience')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('agency_type', models.CharField(blank=True, choices=[('Consultant', 'Consultant'), ('Hospital', ' Hospital'), ('Verification Agent', 'Verification Agent'), ('Field Agent', 'Field Agent')], max_length=50, null=True, verbose_name='Agency Type')),
                ('employee_strength', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Employee Strength')),
                ('facilities_available', models.CharField(blank=True, default='', max_length=400, null=True, verbose_name='facilities Available')),
                ('licence_no', models.CharField(blank=True, default='', max_length=400, null=True, verbose_name='Licence Number')),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.City', verbose_name='City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.Country', verbose_name='Country')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.State', verbose_name='State')),
            ],
            options={
                'db_table': 'employee_services_recruitement_update_consultants',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementUpdateConsultantsDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Name')),
                ('constitution', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Constitution')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'employee_services_recruitement_update_consultants_details',
            },
        ),
        migrations.CreateModel(
            name='EmployeeServicesRecruitementverificationtemplateUploads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_template_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Verification Template')),
                ('type_of_verification_1', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Type Of Verification')),
                ('document_status', models.BooleanField(default=0)),
                ('ref_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeServicesRecruitementRecommended', verbose_name='Employee Id')),
            ],
            options={
                'db_table': 'employee_services_recruitement_verification_upload',
            },
        ),
        migrations.CreateModel(
            name='EmployeeUpdateRegistrationTermination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('termination_date', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Termination Date')),
                ('approve_by', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Approved By')),
                ('reason_termination', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Reasons for Termination')),
                ('termination_benifit', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Termination Benefit')),
            ],
            options={
                'db_table': 'employee_registration_termination',
            },
        ),
        migrations.CreateModel(
            name='KeyResponsibilityApproveKRA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_1', models.DateField(blank=True, null=True, verbose_name='Month & Year ')),
                ('approve_type_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Type')),
                ('approve_details_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Details')),
                ('approve_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Period')),
                ('approval_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Approval Status')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('reporting_officer_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reporting_officer_2', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id')),
            ],
            options={
                'db_table': 'key_responsibility_approve_kra',
            },
        ),
        migrations.CreateModel(
            name='KeyResponsibilityApproveTargets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_1', models.DateField(blank=True, null=True, verbose_name='Target Month ')),
                ('target_type_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Type')),
                ('target_name_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Name')),
                ('target_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Period')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Aproval Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('reporting_officer_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reporting_officer_3', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id')),
            ],
            options={
                'db_table': 'key_responsibility_approve_targets',
            },
        ),
        migrations.CreateModel(
            name='keyResponsibilityKRAPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_1', models.DateField(blank=True, null=True, verbose_name='Month & Year ')),
                ('kra_type_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Type')),
                ('kra_frequency_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Frequency')),
                ('kra_details_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Details')),
                ('kra_fulfilment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Fulfilment')),
                ('kra_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Period')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('reporting_officer_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='officer_reporting', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id')),
            ],
            options={
                'db_table': 'key_responsibility_kra_performance',
            },
        ),
        migrations.CreateModel(
            name='keyResponsibilityKRAPerformanceAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_1', models.DateField(blank=True, null=True, verbose_name='Target Month ')),
                ('target_type_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Type')),
                ('target_name_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Name')),
                ('target_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Period')),
                ('kra_fulfilment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Fulfilment')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('reporting_officer_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reporting_officer_6', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id')),
            ],
            options={
                'db_table': 'key_responsibility_target_achievement',
            },
        ),
        migrations.CreateModel(
            name='KeyResponsibilityUpdateKRA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_1', models.DateField(blank=True, null=True, verbose_name='Month & Year ')),
                ('kra_type_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Type')),
                ('kra_frequency_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Frequency')),
                ('kra_details_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Details')),
                ('kra_fulfilment', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Fulfilment')),
                ('kra_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Period')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_1', to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designation_1', to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('reporting_officer_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reporting_officer', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id')),
            ],
            options={
                'db_table': 'key_responsibility_update_target',
            },
        ),
        migrations.CreateModel(
            name='KeyResponsibilityUpdateTargets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_1', models.DateField(blank=True, null=True, verbose_name='Target Month ')),
                ('target_type_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Type')),
                ('target_name_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Name')),
                ('target_period_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Period')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('reporting_officer_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reporting_officer_1', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Id')),
            ],
            options={
                'db_table': 'key_responsibility_update_KRA',
            },
        ),
        migrations.CreateModel(
            name='LeaveandHolidaysManagementUpdateLeavesQuota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('leave_balance', models.CharField(blank=True, max_length=200, null=True, verbose_name='Balance in Beginning ')),
                ('leave_added', models.CharField(blank=True, max_length=200, null=True, verbose_name='Leave Added')),
                ('frequency_of_leave', models.CharField(blank=True, choices=[('Monthly', 'Monthly'), ('Half Yearly', 'Half Yearly'), ('Yearly', 'Yearly')], max_length=200, null=True, verbose_name='Frequency of Leave')),
                ('impact_on_salary', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Impace on Salary')),
                ('maximum_limit_carry_forward_allowed', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Limit')),
                ('total_leave', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Leave')),
                ('encashment_allowed', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Encashment allowed')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('financial_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageFinancialYear', verbose_name='Financial Year')),
                ('first_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_names', to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Name')),
                ('leave_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.HolidaysandLeavesLeaveType', verbose_name='Leave Type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee Id')),
            ],
            options={
                'db_table': 'leave_and_holidays_management_leaves',
            },
        ),
        migrations.CreateModel(
            name='ManageProductTrainingSendWishToAttend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Inprocess'), (3, 'Complete')], default=1, null=True, verbose_name='Status')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('traning_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowleage_tranning.ManageKnowledgeProductTraining', verbose_name='Training')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'manage_product_training_send_wish_to_attend',
            },
        ),
        migrations.CreateModel(
            name='OvertimeManagementUpdateOvertime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_status', models.BooleanField(default=0)),
                ('overtime_status', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year_date', models.DateField(blank=True, null=True, verbose_name='Month/Year')),
                ('overtime_start', models.CharField(blank=True, max_length=200, null=True, verbose_name='Login Time')),
                ('overtime_end', models.CharField(blank=True, max_length=200, null=True, verbose_name='Logout Time')),
                ('total_hours', models.IntegerField(blank=True, default=0, null=True, verbose_name='Total Hours')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('overtime_type', models.CharField(blank=True, choices=[('Office', 'Office'), ('Field', 'Field'), ('On Tour', 'On Tour'), ('On Duty', 'On Duty')], default=0, max_length=100, null=True, verbose_name='OvertimeType')),
                ('mode_of_attendance', models.CharField(blank=True, choices=[('Manual', 'Manual'), ('Online', 'Online'), ('Bio_Matrix', 'Bio Matrix')], default=0, max_length=100, null=True, verbose_name='Mode of attendance')),
                ('login_address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Login Location')),
                ('logout_address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Logout Location')),
                ('login_time', models.DateTimeField(blank=True, null=True, verbose_name='Login  Time')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout Time')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee Id')),
            ],
            options={
                'db_table': 'over_time_management_update_over_time',
            },
        ),
        migrations.CreateModel(
            name='PayrollSalaryDisbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('month_and_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Month and Year')),
                ('bank_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bank Name')),
                ('ifsc_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='IFSC Code')),
                ('account_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account Number')),
                ('amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Amount')),
                ('mode_of_payment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Mode of Payment')),
                ('date_of_payment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Date of Payment')),
                ('status', models.IntegerField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'payroll_salary_disbursement',
            },
        ),
        migrations.CreateModel(
            name='PayrollSalaryVoucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_and_year', models.CharField(blank=True, max_length=200, null=True, verbose_name='Month and Year')),
                ('gl_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='GL Code')),
                ('particulars', models.CharField(blank=True, max_length=200, null=True, verbose_name='Particulars')),
                ('debit_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Debit Amount')),
                ('credit_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Credit Amount')),
                ('status', models.IntegerField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'payroll_salary_voucher_data',
            },
        ),
        migrations.CreateModel(
            name='PayrollStatutoryDeductions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employer_contribution', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employer Contribution')),
                ('employee_contribution', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Contribution')),
                ('month_and_year', models.DateField(blank=True, null=True, verbose_name='Month and Year')),
                ('others', models.CharField(blank=True, max_length=200, null=True, verbose_name='Others')),
                ('total_deduction', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Deduction')),
                ('status', models.IntegerField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default=1, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('deduction_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagePayRollStatutoryDeductions', verbose_name='Deduction Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'payroll_statuary_deduction',
            },
        ),
        migrations.CreateModel(
            name='TravelClaimManagementTravelConveyanceTravelRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.BooleanField(default=0)),
                ('ticket_expenses', models.IntegerField(blank=True, null=True, verbose_name='Ticket Expenses')),
                ('food_expenses', models.IntegerField(blank=True, null=True, verbose_name='Food Expenses')),
                ('stay_expenses', models.IntegerField(blank=True, null=True, verbose_name='Stay Expenses')),
                ('other_expenses', models.IntegerField(blank=True, null=True, verbose_name='Other Expenses')),
                ('employee_names', models.CharField(blank=True, max_length=200, null=True, verbose_name='Employee Name')),
                ('no_of_days', models.CharField(blank=True, max_length=200, null=True, verbose_name='No of Days')),
                ('travel_start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('travel_end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('stay_arrangement', models.CharField(blank=True, choices=[('Own Arrangement', 'Own Arrangement'), ('Company Arrangement', 'Company Arrangement')], default=0, max_length=100, null=True, verbose_name='Stay Arrangement')),
                ('total_travel_cost', models.CharField(blank=True, max_length=200, null=True, verbose_name='Total Travel Cost')),
                ('advance_required', models.CharField(blank=True, max_length=200, null=True, verbose_name='Advance Required')),
                ('reasons_for_travel', models.CharField(blank=True, max_length=200, null=True, verbose_name='Purpose for Travel')),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=200, null=True, verbose_name='Status')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('mode_of_travel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.TravelandClaimTravelManagementModeofTravel', verbose_name='Mode of Travel')),
            ],
            options={
                'db_table': 'travel_claim_management_travel_conveyance_travel_requests',
            },
        ),
        migrations.CreateModel(
            name='UserLoginApiLogsAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approve_status', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('approve_action', models.BooleanField(default=0)),
                ('correction_status', models.BooleanField(default=0)),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('correction_date', models.DateField(blank=True, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('attendance_mode', models.CharField(blank=True, choices=[('Manual', 'Manual'), ('Online', 'Online'), ('Bio_Matrix', 'Bio Matrix')], default='', max_length=100, null=True, verbose_name='Mode of Attendance')),
                ('employee_names', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Employee Name')),
                ('user_pics', models.ImageField(default='', null=True, upload_to='user_attendence_pics/', verbose_name='Login User Pics')),
                ('logout_user_pics', models.ImageField(default='', null=True, upload_to='user_attendence_pics/', verbose_name='Logout User Pics')),
                ('attendance_type', models.CharField(blank=True, choices=[('Office', 'Office'), ('Field', 'Field'), ('On Tour', 'On Tour'), ('On Duty', 'On Duty')], default=0, max_length=100, null=True, verbose_name='Attendance Type')),
                ('logout_attendance_type', models.IntegerField(blank=True, choices=[('Office', 'Office'), ('Field', 'Field'), ('On Tour', 'On Tour'), ('On Duty', 'On Duty')], default=0, null=True, verbose_name='Logout Attendance Type')),
                ('address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Login Location')),
                ('logout_address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Logout Location')),
                ('latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('logout_latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('logout_longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('login_true', models.BooleanField(default=0)),
                ('logout_true', models.BooleanField(default=0)),
                ('logout_true1', models.BooleanField(default=0)),
                ('notification_send', models.BooleanField(default=0)),
                ('added', models.DateTimeField(auto_now_add=True, verbose_name='Login  Time')),
                ('login_time', models.CharField(blank=True, max_length=100, null=True, verbose_name='Login  Time(10:53)')),
                ('logout_time', models.CharField(blank=True, max_length=100, null=True, verbose_name='Logout Time(10:53)')),
                ('month_year', models.DateField(blank=True, null=True, verbose_name='Month/Year')),
                ('date_field', models.CharField(blank=True, max_length=100, null=True, verbose_name='Month/Year')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('attendance_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Accept', 'Accept'), ('Reject', 'Reject')], default='', max_length=100, null=True, verbose_name='Correction Status')),
                ('attendance_correction', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Correction')),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee Id')),
            ],
            options={
                'db_table': 'user_login_api_logs_attendance',
            },
        ),
        migrations.AddField(
            model_name='employeeservicesrecruitementinviteresume',
            name='name_of_candidate',
            field=models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeServicesRecruitementRecommended', verbose_name='Name of Candidate'),
        ),
        migrations.AddField(
            model_name='employeeservicesrecruitementinviteresume',
            name='received_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.RecruitmentManagementCandidateSourcingManageReceiptofResume', verbose_name='Received from'),
        ),
        migrations.AddField(
            model_name='employeeservicesrecruitementinviteresume',
            name='reporting_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer'),
        ),
        migrations.AddField(
            model_name='employeeservicesrecruitementdocumentuploads',
            name='email_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_1', to='employee_website.EmployeeServicesRecruitementRecommended', verbose_name='Email'),
        ),
        migrations.AddField(
            model_name='employeeservicesrecruitementdocumentuploads',
            name='location_id',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeservicesrecruitementdocumentuploads',
            name='ref_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeServicesRecruitementRecommended', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateregistrationmedicalhistory',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateregistrationjoiningdetailshistory',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateregistrationjoiningdetails',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateregistrationfamiliyotherdetails',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateregistrationfamilitydetails',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateregistrationfamilitychildren',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateprofessionaljourney',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdateeducationalqualification',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdatedepartment',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdatedepartment',
            name='new_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='New Department'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdatedepartment',
            name='new_designation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='New Designation'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdatedepartment',
            name='new_reporting_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='New Reporting To'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdatedepartment',
            name='new_responsibilities',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='New Responsibility'),
        ),
        migrations.AddField(
            model_name='employeeregistrationupdatebankdetails',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationreferences',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationpermanentaddress',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationdocuments',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationdeductionandperquisites',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregistrationcorrespondenceaddress',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeregisterationupdateregistrationemergencycontactdetails',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessingupdatetaxrecovery',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessingupdatetaxrecovery',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessingupdatetaxdeclaration',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessingupdatetaxdeclaration',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessingupdaterecoveries',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessingupdaterecoveries',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_ids', to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='first_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_name', to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Name'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='joining_grade_offered',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationJoiningDetails', verbose_name='Grad'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='leave_balance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.LeaveandHolidaysManagementUpdateLeavesQuota', verbose_name='Total Leave '),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='leave_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.HolidaysandLeavesLeaveType', verbose_name='Leaves Type'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='month_and_year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeePayrollProcessingUpdateAdvances', verbose_name='Month and Year'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='pan_card',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Pan Card'),
        ),
        migrations.AddField(
            model_name='employeepayrollprocessed',
            name='reimbursement_type_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageReimbursement', verbose_name='Reimbursement Type'),
        ),
        migrations.AddField(
            model_name='employeeleavesleaverequest',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeleavesleaverequest',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeleavesleaverequest',
            name='type_of_leave',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.HolidaysandLeavesLeaveType', verbose_name='Type of Leave'),
        ),
        migrations.AddField(
            model_name='employeeleavesleaverequest',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeeincometaxcalculation',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeexitemployeeresignation',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeexitemployeeresignation',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeexitemployeeresignation',
            name='reporting_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reporting_officers', to=settings.AUTH_USER_MODEL, verbose_name='Reporting Officer'),
        ),
        migrations.AddField(
            model_name='employeeexitemployeeresignation',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitreimbursement',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitreimbursement',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitreimbursement',
            name='reimbursement_type_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageReimbursement', verbose_name='Reimbursement Type'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitreimbursement',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitclaims',
            name='employee_id_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitclaims',
            name='location_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursementsubmitclaims',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursement',
            name='employee_id_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursement',
            name='location_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeclaimandreimbursement',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employeeassetallocated',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AddField(
            model_name='employeeadvancessubmitincentivebonus',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeadvancessubmitincentivebonus',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeadvancessubmitincentivebonus',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='employeeadvancessubmitadvancerequest',
            name='employee_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='Employee Id'),
        ),
        migrations.AddField(
            model_name='employeeadvancessubmitadvancerequest',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='employeeadvancessubmitadvancerequest',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='employeeaccesscontrols',
            name='user_employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_website.EmployeeRegistrationUpdateRegistrationPersonalDetails', verbose_name='User Id'),
        ),
        migrations.AlterUniqueTogether(
            name='leaveandholidaysmanagementupdateleavesquota',
            unique_together={('user', 'leave_type')},
        ),
    ]
