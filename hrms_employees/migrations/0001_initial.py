# Generated by Django 2.1.7 on 2020-10-27 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hrms_management', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvanceEntitlement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maximum_amount', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Amount')),
                ('interest_required', models.IntegerField(blank=True, default=0, null=True, verbose_name='Interest Required')),
                ('rate_of_nterest', models.IntegerField(blank=True, default=0, null=True, verbose_name='Rate of Interest')),
                ('no_of_installments', models.IntegerField(blank=True, default=0, null=True, verbose_name='No of Installments')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'advance_entitlement',
            },
        ),
        migrations.CreateModel(
            name='AssetManagementAllocationPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'asset_management_allocation_policy',
            },
        ),
        migrations.CreateModel(
            name='AssetManagementAssetsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assets_type', models.CharField(blank=True, default='', max_length=50, null=True, unique=True, verbose_name='Assets Type')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'asset_management_assets_type',
            },
        ),
        migrations.CreateModel(
            name='AssetManagementManageAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assets_details', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Assets Details')),
                ('assets_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Assets Number')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('assets_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.AssetManagementAssetsType', verbose_name='Assets Type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'asset_management_manage_assets',
            },
        ),
        migrations.CreateModel(
            name='ExitManagementExitInterview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Interview type')),
                ('requirement_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Requirement Type')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'exit_management_exit_interview',
            },
        ),
        migrations.CreateModel(
            name='ExitManagementExitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exit_type', models.CharField(blank=True, default='', max_length=200, null=True, unique=True, verbose_name='Exit Type')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'exit_management_exit_type',
            },
        ),
        migrations.CreateModel(
            name='ExitManagementFinalSettlement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_settlement_days', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Final Settlement Days')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'exit_management_final_settlement_days',
            },
        ),
        migrations.CreateModel(
            name='ExitManagementNoticePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_period_in_days', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Notice Period in Days')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'exit_management_notice_period',
            },
        ),
        migrations.CreateModel(
            name='HolidaysandLeavesLeaveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(default='', max_length=200, verbose_name='Short Name')),
                ('leave_name', models.CharField(default='', max_length=200, verbose_name='Leave Name')),
                ('leave_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Leave Type')),
                ('applicable_to', models.CharField(default='', max_length=200, verbose_name='Applicable to')),
                ('impact_on_salary', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=1, null=True, verbose_name='Impact on Salary')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'holidays_and_leaves_leave_type',
            },
        ),
        migrations.CreateModel(
            name='HolidaysandLeavesManageLeaveQouta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(default='', max_length=200, verbose_name='Short Name')),
                ('leave_name', models.CharField(default='', max_length=200, verbose_name='Leave Name')),
                ('applicable_to', models.CharField(default='', max_length=200, verbose_name='Applicable to')),
                ('start_month', models.CharField(default='', max_length=200, verbose_name='Start Month')),
                ('end_month', models.CharField(default='', max_length=200, verbose_name='End Month')),
                ('maximum_leave_qouta', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Leave Qouta')),
                ('impact_on_salary', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Impact on Salary')),
                ('permission_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Permission Required')),
                ('authority', models.CharField(default='', max_length=200, verbose_name='Authority')),
                ('carried_forward', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=0, null=True, verbose_name='Carried Forward')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('leave_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.HolidaysandLeavesLeaveType', verbose_name='Leave Type')),
            ],
            options={
                'db_table': 'holidays_and_leaves_manage_leave_qouta',
            },
        ),
        migrations.CreateModel(
            name='HRPoliciesPolicyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Policy Type')),
                ('policy_name', models.CharField(default='', max_length=200, verbose_name='Policy Name')),
                ('applicable_to_location', models.CharField(default='', max_length=200, verbose_name='Applicable to Location')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hr_policies_policy_type',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeandTrainingKnowledgeSharing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documents_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Documents Type')),
                ('subject', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Subject')),
                ('status', models.IntegerField(blank=True, choices=[('Pending', 'Pending'), ('Accept', 'Accept'), ('Reject', 'Reject')], default=1, null=True, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'knowledgeand_training_knowledge_sharing',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeandTrainingUpdateDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Document Type')),
                ('subject', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Subject')),
                ('upload', models.FileField(upload_to='knowleage_traninig/%Y/%m/%d/', verbose_name='Upload(PDF File Only)')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'knowledgeand_training_update_documents',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeandTrainingUpdatePromotions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_product', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Promotion Product')),
                ('promotion_details', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Promotion Details')),
                ('promotion_period', models.TextField(blank=True, default='', max_length=200, null=True, verbose_name='Promotion Period')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'knowledgeand_training_update_pramotions',
            },
        ),
        migrations.CreateModel(
            name='ManageAppraisalIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_appraisal_incentive',
            },
        ),
        migrations.CreateModel(
            name='ManageClaimsClaimEntitlement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(default='', max_length=200, unique=True, verbose_name='Grade')),
                ('claim_limit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Claim Limit')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'holidays_and_leaves_claim_entitlement',
            },
        ),
        migrations.CreateModel(
            name='ManageClaimType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Claim Type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_claim_type',
            },
        ),
        migrations.CreateModel(
            name='ManageDeductionsStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction_category', models.CharField(default='', max_length=50, unique=True, verbose_name='Deduction Category')),
                ('deduction_type', models.CharField(default='', max_length=50, verbose_name='Deduction Type')),
                ('deduction_name', models.CharField(default='', max_length=10, verbose_name='Deduction Name')),
                ('deduction_amount', models.CharField(default='', max_length=200, verbose_name='Deduction Amount')),
                ('frequency', models.CharField(default='', max_length=200, verbose_name='Frequency')),
                ('basis_of_calculation', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Basis of Calculation')),
                ('minimum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum')),
                ('maximum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum')),
                ('part_of_ctc', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Part of CTC')),
                ('deduction_from_payroll', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction from Payroll')),
                ('start_date1', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value')),
            ],
            options={
                'db_table': 'manage_deduction_structure',
            },
        ),
        migrations.CreateModel(
            name='ManageEmployeeId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(default='', max_length=200, verbose_name='Employee Id')),
                ('unique_id', models.CharField(default='', max_length=200, verbose_name='Sector')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_employees_id',
            },
        ),
        migrations.CreateModel(
            name='ManageEmployeeReportingStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_to', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Reported To')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.RoleMangement', verbose_name='Role')),
            ],
            options={
                'db_table': 'manage_employee_reporting_structure',
            },
        ),
        migrations.CreateModel(
            name='ManageExpereince',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Experience Range')),
                ('experience', models.CharField(default='', max_length=200, verbose_name='Experience')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value')),
            ],
            options={
                'db_table': 'manage_employee_expereince',
            },
        ),
        migrations.CreateModel(
            name='ManageFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(default='', max_length=200, verbose_name='Relationship')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_employee_family',
            },
        ),
        migrations.CreateModel(
            name='ManageGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Grade Type')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'manage_employee_grade',
            },
        ),
        migrations.CreateModel(
            name='ManageGradeChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_grade', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='New Grade')),
                ('existing_grade', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Existing Grade')),
                ('applicable_from', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Applicable From')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'manage_grade_change',
            },
        ),
        migrations.CreateModel(
            name='ManageIncrements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('increment_amount', models.IntegerField(blank=True, default='', null=True, verbose_name=' Increment Amount')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('applicable_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGradeChange', verbose_name='Applicable From')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'manage_increments',
            },
        ),
        migrations.CreateModel(
            name='ManageLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(default='', max_length=200, unique=True, verbose_name='Language')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_employee_language',
            },
        ),
        migrations.CreateModel(
            name='ManagementEmployeePayrollofJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'management_employee_pay_roll_of_job',
            },
        ),
        migrations.CreateModel(
            name='ManagementEmployeeTypeofJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'management_employee_type_of_job',
            },
        ),
        migrations.CreateModel(
            name='ManageOtherIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Income Type')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_employee_other_income',
            },
        ),
        migrations.CreateModel(
            name='ManagePayRollDeductions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction_type', models.CharField(default='', max_length=200, verbose_name='Deduction Type')),
                ('nature_of_deduction', models.CharField(default='', max_length=200, verbose_name='Nature of Deduction')),
                ('tax_exempted', models.CharField(default='', max_length=200, verbose_name='Tax Exempted')),
                ('minimum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum')),
                ('maximum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
            ],
            options={
                'db_table': 'manage_pay_roll_deductions',
            },
        ),
        migrations.CreateModel(
            name='ManagePayRollDefineAdvances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advance_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Advance Type')),
                ('minimum_limit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum Limit')),
                ('maximum_limit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Limit')),
                ('grades', models.CharField(default='', max_length=200, verbose_name='Grades')),
                ('base_rate', models.CharField(default='', max_length=200, verbose_name='Base Rate')),
                ('interest_rate', models.CharField(default='', max_length=200, verbose_name='Interest Rate')),
                ('part_of_ctc', models.CharField(default='', max_length=200, verbose_name='Part of CTC')),
                ('taxable', models.CharField(default='', max_length=200, verbose_name='Taxable')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'manage_pay_roll_define_advances',
            },
        ),
        migrations.CreateModel(
            name='ManagePayRollExemptedIncome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provision_of_tax_rules', models.CharField(default='', max_length=200, verbose_name='Provision of Tax Rules')),
                ('maximum_limit', models.CharField(default='', max_length=200, verbose_name='Maximum Limit')),
                ('criteria', models.CharField(default='', max_length=200, verbose_name='Criteria')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('income_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.ManageOtherIncome', verbose_name='Income Type')),
            ],
            options={
                'db_table': 'manage_pay_roll_exempted_income',
            },
        ),
        migrations.CreateModel(
            name='ManagePayRollReimbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reimbursement_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Reimbursement Type')),
                ('reimbursement_name', models.CharField(default='', max_length=200, verbose_name='Reimbursement Name')),
                ('applicable_to', models.CharField(default='', max_length=200, verbose_name='Applicable to')),
                ('impact_on_tax', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], default=1, null=True, verbose_name='Impace On Tax')),
                ('part_of_salary', models.CharField(default='', max_length=200, verbose_name='Part of Salary')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_pay_roll_reimbursement',
            },
        ),
        migrations.CreateModel(
            name='ManagePayRollStatutoryDeductions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Deduction Type')),
                ('provision_of_rules', models.CharField(default='', max_length=200, verbose_name='Provision of Rules')),
                ('salary_code', models.CharField(default='', max_length=200, verbose_name='Salary Code')),
                ('minimum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum')),
                ('maximum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum')),
                ('employee_contribution', models.CharField(default='', max_length=200, verbose_name='Employee Contribution')),
                ('admin_charges', models.IntegerField(blank=True, default=0, null=True, verbose_name='Admin Charges')),
                ('part_of_ctc', models.CharField(default='', max_length=200, verbose_name='Part of CTC')),
                ('part_of_taxable_perquisite', models.CharField(default='', max_length=200, verbose_name='Part of Taxable Perquisite')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_pay_roll_statutory_deductions',
            },
        ),
        migrations.CreateModel(
            name='ManagePayRollTaxStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_year', models.CharField(default='', max_length=200, verbose_name='Assessment Year')),
                ('tax_type', models.CharField(default='', max_length=200, verbose_name='Tax Type')),
                ('minimum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum')),
                ('maximum', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum')),
                ('tax_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Tax Rate')),
                ('cess_type', models.CharField(default='', max_length=200, verbose_name='Cess Type')),
                ('cess_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Cess Rate')),
                ('surcharge_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Surcharge Rate')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_pay_roll_tax_structure_model',
            },
        ),
        migrations.CreateModel(
            name='ManageQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_qualification', models.CharField(default='', max_length=200, unique=True, verbose_name='Type of Qualification')),
                ('qualification', models.CharField(default='', max_length=200, verbose_name='Qualification')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_employee_qualification',
            },
        ),
        migrations.CreateModel(
            name='ManageReimbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reimbursement_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Reimbursement Type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_reimbursement',
            },
        ),
        migrations.CreateModel(
            name='ManageReimbursementReimbursementEntitilement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(default='', max_length=200, unique=True, verbose_name='Grade')),
                ('claim_limit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Claim Limit')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('claim_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageClaimType', verbose_name='Claim Type')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'manage_reimbursement_reimbursement_entitilement',
            },
        ),
        migrations.CreateModel(
            name='ManageSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_code', models.CharField(default='', max_length=200, unique=True, verbose_name='Salary Code')),
                ('salary_type', models.CharField(default='', max_length=200, verbose_name='Salary Type')),
                ('salary_frequency', models.CharField(default='', max_length=200, verbose_name='Salary Frequency')),
                ('measurement', models.CharField(default='', max_length=200, verbose_name='Measurement')),
                ('taxablility', models.CharField(default='', max_length=200, verbose_name='Taxablility')),
                ('display_type', models.CharField(default='', max_length=200, verbose_name='Display Type')),
                ('limit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Limit')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'manage_employee_salary',
            },
        ),
        migrations.CreateModel(
            name='ManageSalaryRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_salary', models.IntegerField(blank=True, default=0, null=True, verbose_name=' Salary Range')),
                ('maximum_salary', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Salary')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
            ],
            options={
                'db_table': 'manage_employee_salary_range',
            },
        ),
        migrations.CreateModel(
            name='OnboardingExitRemunerationManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_code', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Salary Code')),
                ('salary_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Salary Type')),
                ('salary_frequency', models.IntegerField(blank=True, choices=[(1, 'Monthly'), (2, 'Yearly')], default=1, null=True, verbose_name='Salary Frequency')),
                ('amount', models.IntegerField(blank=True, default=0, null=True, verbose_name='Amount')),
                ('deduction_category', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction Category')),
                ('deduction_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction type')),
                ('deduction_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction Name')),
                ('deduction_frequency', models.IntegerField(blank=True, choices=[(1, 'Monthly'), (2, 'Yearly')], default=1, null=True, verbose_name='Deduction Frequency')),
                ('deduction_amount', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Deduction Amount')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'onboarding_exit_remuneration_management',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalAppraisalBenefitsDefineChangeinGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_grades', models.CharField(blank=True, max_length=200, null=True, verbose_name='No of  Grades')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
            ],
            options={
                'db_table': 'performance_appraisal_appraisal_benefits_change_in_grade',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalAppraisalCommittee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_members', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='No of Members')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'performance_appraisal_appraisal_committee',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalBenefitsAppraisalIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(blank=True, max_length=200, null=True, verbose_name='Rating')),
                ('amount', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Amount')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
            ],
            options={
                'db_table': 'performance_appraisal_benefits_appraisal_incentive',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalBenefitsDefineIncrement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(blank=True, max_length=200, null=True, verbose_name='Rating')),
                ('increment', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Increment')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'performance_appraisal_benefits_define_increment',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalBenefitsManageGradeChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(blank=True, max_length=200, null=True, verbose_name='Rating')),
                ('no_of_grades', models.CharField(blank=True, max_length=200, null=True, verbose_name='No of  Grades')),
                ('new_grades', models.CharField(blank=True, max_length=200, null=True, verbose_name='New Grades')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'performance_appraisal_benefits_manage_grade_change',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalManageBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency_of_bonus', models.CharField(blank=True, max_length=200, null=True, verbose_name='Frequency of Bonus')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_managebonus',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalManagementAppraisalFrequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appraisal_frequency', models.CharField(blank=True, max_length=200, null=True, verbose_name='Appraisal Frequency')),
                ('cut_off_date', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cut off Date')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_management_appraisal_frequency',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalManagementCrossDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('cross_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cross_departments', to='hrms_management.ManageDepartment', verbose_name='Cross Departments')),
                ('main_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Main Department')),
            ],
            options={
                'db_table': 'performance_appraisal_management_cross_department',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalManagePerformanceIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incentive_frequency', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Frequency')),
                ('target_fulfilment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target Fulfilment')),
                ('incentive_amount', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Amount')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_management_performance_incentive',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalPerformanceManagementIncentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incentive_type', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Incentive Type')),
                ('incentive_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Name')),
                ('incentive_frequency', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incentive Frequency')),
                ('basis_of_incentive', models.CharField(blank=True, max_length=200, null=True, verbose_name='Basis of Incentives')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_performance_management_incentive',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalPerformanceManagementTargets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kra_type', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='KRA Target Type')),
                ('kra_frequency', models.CharField(blank=True, max_length=200, null=True, verbose_name='KRA Frequency')),
                ('target', models.CharField(blank=True, max_length=200, null=True, verbose_name='Target')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.RoleMangement', verbose_name='Role')),
            ],
            options={
                'db_table': 'performance_appraisal_performance_management_targets',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalRatingManageRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weightage_range', models.CharField(blank=True, max_length=200, null=True, verbose_name='Weightage Range')),
                ('rating', models.CharField(blank=True, max_length=200, null=True, verbose_name='Rating')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_rating_manage_rating',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalRatingWeightage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appraising_person', models.CharField(blank=True, max_length=200, null=True, verbose_name='Appraising Person')),
                ('maximum_weightage', models.CharField(blank=True, max_length=200, null=True, verbose_name='Maximum Weightage')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_rating_weightage',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalUpdateBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_type', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Bonus Type')),
                ('frequency_of_bonus', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Frequency of Bonus')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'performance_appraisal_updatebonus',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalUpdateIncentiveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventive_type', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Inventive Type')),
                ('frequency_of_incentive', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Frequency of Incentive')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
            ],
            options={
                'db_table': 'performance_appraisal_updateIncentive_type',
            },
        ),
        migrations.CreateModel(
            name='PoliciesandFormsManagementHRPolicies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Form Type')),
                ('form_name', models.CharField(default='', max_length=200, verbose_name='Form Name')),
                ('applicable_to_location', models.CharField(default='', max_length=200, verbose_name='Applicable to Location')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'policies_and_forms_management_hr_policies_form',
            },
        ),
        migrations.CreateModel(
            name='RecruitementPoliciesEmployeeStrength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(default='', max_length=200, verbose_name='Location')),
                ('maximum_employee', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Employee')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'recruitement_policies_employee_strength',
            },
        ),
        migrations.CreateModel(
            name='RecruitementPoliciesExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_experience', models.CharField(default='', max_length=200, verbose_name='Min Experience')),
                ('max_experience', models.CharField(default='', max_length=200, verbose_name='Max Experience')),
                ('language_fluency', models.CharField(default='', max_length=200, verbose_name='Language Fluency')),
                ('other_requirement', models.CharField(default='', max_length=200, verbose_name='Other Requirement')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitement_policies_experience',
            },
        ),
        migrations.CreateModel(
            name='RecruitementPoliciesManageRecruitmentRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recruitement_rules', models.CharField(default='', max_length=200, verbose_name='Recruitement Rules')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitement_policies_manage_recruitment_rules',
            },
        ),
        migrations.CreateModel(
            name='RecruitementPoliciesQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_qualification', models.CharField(default='', max_length=200, verbose_name='Academic Qualification')),
                ('professional_qualification', models.CharField(default='', max_length=200, verbose_name='Professional Qualification')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitement_policies_qualification',
            },
        ),
        migrations.CreateModel(
            name='Recruitmentapprovingauthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority_type', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Authority Type')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
            ],
            options={
                'db_table': 'recruitment_approving_authority',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementCandidateSourcingManageJobPublishment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publishment_type', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Publishment type')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'recruitment_management_candidate_sourcing_manage_job_publishment',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementCandidateSourcingManageReceiptofResume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_of_resume_receipt', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Mode of Resume Receipt')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'recruitment_management_candidate_sourcing_manage_receipt_of_resume',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementInterveiwManageCandidateShortlistingAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_screen_level', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Resume  Screen Level')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'recruitment_management_interview_manage_candidate_shortlisting_authority',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementInterveiwManageSelectionProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_screen_level', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Resume  Screen Level')),
                ('maximum_score', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Maximum Score')),
                ('passing_score', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Passing Score')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitment_management_interview_manage_selection_process',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementInterveiwProcessManageInterviewProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_of_interview', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Mode of interview')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'recruitment_management_interveiw_process_manage_interview_process',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementInterveiwProcessScorecard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_screen_level', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Resume  Screen Level')),
                ('maximum_score', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Maximum Score')),
                ('passing_score', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Passing Score')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'recruitment_management_interveiw_process_scorecard',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementInterveiwProcessScreeningLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desigantion', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Desigantion  ')),
                ('screening_Process', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Screening Process  ')),
                ('sequencing_of_process', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Sequencing of Process')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
            ],
            options={
                'db_table': 'recruitment_management_interveiw_process_screening_level',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementRecruitmentPlanningEmployeeStrength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maximum_employee', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Employee')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
            ],
            options={
                'db_table': 'recruitment_management_recruitment_planning_employee_strength',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementRecruitmentPlanningExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_experience', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Min Experience')),
                ('max_experience', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Max Experience')),
                ('language_fluency', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Language Fluency')),
                ('other_requirement', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Other Requirement')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitment_management_recruitment_planning_expirence',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementRecruitmentPlanningManageRecruitmentRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recruitement_rules', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Recruitement Rules')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitment_management_recruitment_planning_recruitment_rules',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagementRecruitmentPlanningQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_qualification', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Academic Qualification')),
                ('personal_qualification', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Professional Qualification')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'recruitment_management_recruitment_planning_qualification',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManagePsychometricTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_required', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Test Required ')),
                ('test_type', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Test Type')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('desigantion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Desigantion  ')),
            ],
            options={
                'db_table': 'recruitment_manage_psychometric_test',
            },
        ),
        migrations.CreateModel(
            name='RecruitmentManageTestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_points', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Minimum Points')),
                ('maximum_points', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Maximum Points')),
                ('passing_points', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Passing Points')),
                ('threshhold_limit', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Threshhold Limit')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('desigantion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.RecruitmentManagementInterveiwProcessScreeningLevel', verbose_name='Desigantion  ')),
                ('test_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.RecruitmentManagePsychometricTest', verbose_name='Test Type')),
            ],
            options={
                'db_table': 'recruitment_manage_test_result',
            },
        ),
        migrations.CreateModel(
            name='RegistrationManagementEmploymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_type', models.CharField(blank=True, default='', max_length=200, null=True, unique=True, verbose_name='Employment Type')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'registration_management_employment_type',
            },
        ),
        migrations.CreateModel(
            name='RegistrationManagementKeyResponsibilityAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kra_type', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='KRA Type')),
                ('kra_details', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='KRA Details')),
                ('kra_frequency', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='KRA Frequency')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
            ],
            options={
                'db_table': 'registration_management_key_responsibility_areas',
            },
        ),
        migrations.CreateModel(
            name='RegistrationManagementPayrollAgency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payroll_agency', models.CharField(blank=True, default='', max_length=200, null=True, unique=True, verbose_name='Payroll Agency')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
                ('employment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.RegistrationManagementEmploymentType', verbose_name='Employment Type')),
            ],
            options={
                'db_table': 'registration_management_payroll_agency',
            },
        ),
        migrations.CreateModel(
            name='RegistrationManagementPayrollType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payroll_type', models.CharField(blank=True, default='', max_length=200, null=True, unique=True, verbose_name='Payroll Type')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Description')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'registration_management_payroll_type',
            },
        ),
        migrations.CreateModel(
            name='TravelandClaimTravelManagementManageTravel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_name', models.CharField(default='', max_length=200, unique=True, verbose_name='Travel Name')),
                ('entitlement', models.CharField(default='', max_length=200, verbose_name='Entitlement')),
                ('maximum_limit', models.CharField(default='', max_length=200, verbose_name='Maximum Limit')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'travel_and_claim_travel_management_manage_travel',
            },
        ),
        migrations.CreateModel(
            name='TravelandClaimTravelManagementModeofTravel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_of_travel', models.CharField(default='', max_length=200, unique=True, verbose_name='Mode of Travel')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'travel_and_claim_travel_management_mode_of_travel',
            },
        ),
        migrations.CreateModel(
            name='TravelandClaimTravelManagementTravelPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_name', models.CharField(default='', max_length=200, unique=True, verbose_name='Policy Name')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('mode_of_travel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.TravelandClaimTravelManagementModeofTravel', verbose_name='Mode of Travel')),
            ],
            options={
                'db_table': 'travel_and_claim_travel_management_travel_policy',
            },
        ),
        migrations.CreateModel(
            name='TravelandClaimTravelManagementTravelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_type', models.CharField(default='', max_length=200, unique=True, verbose_name='Travel Type')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'travel_and_claim_travel_management_travel_type',
            },
        ),
        migrations.CreateModel(
            name='Updateadvancetype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('advance_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagePayRollDefineAdvances', verbose_name='Advance Type')),
            ],
            options={
                'db_table': 'update_advance_type',
            },
        ),
        migrations.CreateModel(
            name='UpdateAppraisalBenefitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appraisal_benefit_type', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Appraisal Benefit Type')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'update_appraisal_benefit_type',
            },
        ),
        migrations.CreateModel(
            name='UpdateAppraisalProcessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appraisal_process_type', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name=' Appraisal Process Type')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
            ],
            options={
                'db_table': 'update_appraisal_process_type',
            },
        ),
        migrations.CreateModel(
            name='UpdateExitApprovalAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('authority_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.Recruitmentapprovingauthority', verbose_name='Authority Type')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('exit_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ExitManagementExitType', verbose_name='Exit Type')),
            ],
            options={
                'db_table': 'update_exit_approval_authority',
            },
        ),
        migrations.CreateModel(
            name='UpdateOtherDeductions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maximum_limit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Limit')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
                ('unit_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value')),
            ],
            options={
                'db_table': 'update_other_deductions',
            },
        ),
        migrations.CreateModel(
            name='UpdatePyschometricTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Test Type')),
                ('minimum_points', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum Points')),
                ('maximum_points', models.IntegerField(blank=True, default=0, null=True, verbose_name='Maximum Points')),
                ('passing_points', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Passing Points')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=1, verbose_name='Is Active')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade')),
                ('test_required', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.RecruitmentManagePsychometricTest', verbose_name=' Appraisal Process Type')),
                ('threshhold_limit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.RecruitmentManageTestResult', verbose_name='Threshhold Limit')),
            ],
            options={
                'db_table': 'update_pyschometric_test',
            },
        ),
        migrations.CreateModel(
            name='UserLoginApiLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approve_status', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('approve_action', models.BooleanField(default=0)),
                ('correction_status', models.BooleanField(default=0)),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('correction_date', models.DateField(blank=True, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('attendance_mode', models.CharField(blank=True, choices=[('Manual', 'Manual'), ('Online', 'Online'), ('Bio_Matrix', 'Bio Matrix')], default='', max_length=100, null=True, verbose_name='Mode of Attendance')),
                ('employee_id', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Employee Id')),
                ('employee_names', models.CharField(blank=True, default='', max_length=250, null=True, unique=True, verbose_name='Employee Name')),
                ('user_pics', models.ImageField(default='', null=True, upload_to='user_attendence_pics/', verbose_name='Login User Pics')),
                ('logout_user_pics', models.ImageField(default='', null=True, upload_to='user_attendence_pics/', verbose_name='Logout User Pics')),
                ('attendance_type', models.CharField(blank=True, choices=[('Office', 'Office'), ('Field', 'Field'), ('On Tour', 'On Tour'), ('On Duty', 'On Duty')], default=0, max_length=100, null=True, verbose_name='Attendance Type')),
                ('logout_attendance_type', models.IntegerField(blank=True, choices=[('Office', 'Office'), ('Field', 'Field'), ('On Tour', 'On Tour'), ('On Duty', 'On Duty')], default=0, null=True, verbose_name='Logout Attendance Type')),
                ('address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Login Location')),
                ('logout_address', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Logout Location')),
                ('latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('logout_latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('logout_longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=20, null=True)),
                ('login_true', models.BooleanField(default=0)),
                ('logout_true', models.BooleanField(default=0)),
                ('logout_true1', models.BooleanField(default=0)),
                ('notification_send', models.BooleanField(default=0)),
                ('added', models.DateTimeField(auto_now_add=True, verbose_name='Login  Time')),
                ('login_time', models.DateTimeField(blank=True, null=True, verbose_name='Login  Time(Format:10:53)')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout Time(10:53)')),
                ('month_year', models.DateField(blank=True, null=True, verbose_name='Month/Year')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Month/Year')),
                ('approval_level_all_status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('attendance_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Accept', 'Accept'), ('Reject', 'Reject')], default='', max_length=100, null=True, verbose_name='Correction Status')),
                ('attendance_correction', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Correction')),
                ('is_active', models.BooleanField(default=1)),
                ('approval_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ApprovalMatrixiDefineApprovalLevel', verbose_name='Approval Level')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location')),
                ('responsibilities', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageResponsibility', verbose_name='Responsibility')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee Id')),
            ],
            options={
                'db_table': 'user_login_api_logs',
            },
        ),
        migrations.AddField(
            model_name='travelandclaimtravelmanagementtravelpolicy',
            name='travel_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.TravelandClaimTravelManagementTravelType', verbose_name='Travel Type'),
        ),
        migrations.AddField(
            model_name='travelandclaimtravelmanagementmanagetravel',
            name='policy_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.TravelandClaimTravelManagementTravelPolicy', verbose_name='Policy Name'),
        ),
        migrations.AddField(
            model_name='registrationmanagementpayrollagency',
            name='payroll_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.RegistrationManagementPayrollType', verbose_name='Payroll Type'),
        ),
        migrations.AddField(
            model_name='performanceappraisalmanageperformanceincentive',
            name='incentive_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.PerformanceAppraisalPerformanceManagementIncentive', verbose_name='Incentive Type'),
        ),
        migrations.AddField(
            model_name='performanceappraisalmanagebonus',
            name='bonus_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.PerformanceAppraisalUpdateBonus', verbose_name='Bonus Type'),
        ),
        migrations.AddField(
            model_name='performanceappraisalmanagebonus',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='performanceappraisalmanagebonus',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='performanceappraisalmanagebonus',
            name='maximum_limit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.UpdateOtherDeductions', verbose_name='Maximum Limit'),
        ),
        migrations.AddField(
            model_name='performanceappraisalmanagebonus',
            name='unit_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value'),
        ),
        migrations.AddField(
            model_name='performanceappraisalbenefitsappraisalincentive',
            name='incentive_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.PerformanceAppraisalPerformanceManagementIncentive', verbose_name='Incentive Type'),
        ),
        migrations.AddField(
            model_name='performanceappraisalbenefitsappraisalincentive',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='manageincrements',
            name='rating',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.PerformanceAppraisalRatingManageRating', verbose_name='Rating'),
        ),
        migrations.AddField(
            model_name='manageincrements',
            name='unit_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value'),
        ),
        migrations.AddField(
            model_name='managegradechange',
            name='rating',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.PerformanceAppraisalRatingManageRating', verbose_name='Rating'),
        ),
        migrations.AddField(
            model_name='manageclaimsclaimentitlement',
            name='claim_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageClaimType', verbose_name='Claim Type'),
        ),
        migrations.AddField(
            model_name='manageclaimsclaimentitlement',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='manageclaimsclaimentitlement',
            name='designation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation'),
        ),
        migrations.AddField(
            model_name='manageclaimsclaimentitlement',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='manageappraisalincentive',
            name='applicable_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGradeChange', verbose_name='Applicable From'),
        ),
        migrations.AddField(
            model_name='manageappraisalincentive',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='manageappraisalincentive',
            name='designation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation'),
        ),
        migrations.AddField(
            model_name='manageappraisalincentive',
            name='increment_amount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageIncrements', verbose_name=' Increment Amount'),
        ),
        migrations.AddField(
            model_name='manageappraisalincentive',
            name='rating',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.PerformanceAppraisalRatingManageRating', verbose_name='Rating'),
        ),
        migrations.AddField(
            model_name='manageappraisalincentive',
            name='unit_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value'),
        ),
        migrations.AddField(
            model_name='exitmanagementnoticeperiod',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='exitmanagementfinalsettlement',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='exitmanagementexitinterview',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='assetmanagementallocationpolicy',
            name='assets_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrms_employees.AssetManagementAssetsType', verbose_name='Assets Type'),
        ),
        migrations.AddField(
            model_name='assetmanagementallocationpolicy',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='assetmanagementallocationpolicy',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManageGrade', verbose_name='Grade'),
        ),
        migrations.AddField(
            model_name='assetmanagementallocationpolicy',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageBranch', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='advanceentitlement',
            name='advance_type',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_employees.ManagePayRollDefineAdvances', verbose_name='Advance Type'),
        ),
        migrations.AddField(
            model_name='advanceentitlement',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDepartment', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='advanceentitlement',
            name='designation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.ManageDesignation', verbose_name='Designation'),
        ),
        migrations.AddField(
            model_name='advanceentitlement',
            name='unit_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hrms_management.UnitValue', verbose_name='Unit Value'),
        ),
    ]
